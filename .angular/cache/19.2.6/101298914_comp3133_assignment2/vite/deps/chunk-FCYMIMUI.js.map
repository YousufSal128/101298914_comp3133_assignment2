{
  "version": 3,
  "sources": ["../../../../../../node_modules/ts-invariant/lib/invariant.js", "../../../../../../node_modules/@apollo/client/version.js", "../../../../../../node_modules/@apollo/client/utilities/globals/maybe.js", "../../../../../../node_modules/@apollo/client/utilities/globals/global.js", "../../../../../../node_modules/@apollo/client/utilities/common/makeUniqueId.js", "../../../../../../node_modules/@apollo/client/utilities/common/stringifyForDisplay.js", "../../../../../../node_modules/@apollo/client/utilities/globals/invariantWrappers.js", "../../../../../../node_modules/@apollo/client/utilities/globals/index.js", "../../../../../../node_modules/@apollo/client/utilities/common/objects.js", "../../../../../../node_modules/@apollo/client/utilities/graphql/fragments.js", "../../../../../../node_modules/@wry/caches/lib/strong.js", "../../../../../../node_modules/@wry/caches/lib/weak.js", "../../../../../../node_modules/@apollo/client/utilities/caching/caches.js", "../../../../../../node_modules/@apollo/client/utilities/caching/sizes.js", "../../../../../../node_modules/@apollo/client/utilities/caching/getMemoryInternals.js", "../../../../../../node_modules/@apollo/client/utilities/common/canonicalStringify.js", "../../../../../../node_modules/@apollo/client/utilities/graphql/storeUtils.js", "../../../../../../node_modules/@wry/trie/lib/index.js", "../../../../../../node_modules/@apollo/client/utilities/common/canUse.js", "../../../../../../node_modules/@apollo/client/utilities/graphql/getFromAST.js", "../../../../../../node_modules/@wry/context/lib/slot.js", "../../../../../../node_modules/@wry/context/lib/index.js", "../../../../../../node_modules/optimism/lib/context.js", "../../../../../../node_modules/optimism/lib/helpers.js", "../../../../../../node_modules/optimism/lib/entry.js", "../../../../../../node_modules/optimism/lib/dep.js", "../../../../../../node_modules/optimism/lib/index.js", "../../../../../../node_modules/@apollo/client/utilities/graphql/DocumentTransform.js", "../../../../../../node_modules/zen-observable-ts/module.js", "../../../../../../node_modules/symbol-observable/es/ponyfill.js", "../../../../../../node_modules/symbol-observable/es/index.js", "../../../../../../node_modules/@apollo/client/utilities/observables/Observable.js", "../../../../../../node_modules/@apollo/client/utilities/common/compact.js", "../../../../../../node_modules/@apollo/client/utilities/common/mergeOptions.js", "../../../../../../node_modules/@apollo/client/utilities/graphql/directives.js", "../../../../../../node_modules/@apollo/client/utilities/graphql/print.js", "../../../../../../node_modules/@apollo/client/utilities/common/arrays.js", "../../../../../../node_modules/@apollo/client/utilities/graphql/transform.js", "../../../../../../node_modules/@apollo/client/utilities/common/mergeDeep.js", "../../../../../../node_modules/@apollo/client/utilities/promises/preventUnhandledRejection.js", "../../../../../../node_modules/@apollo/client/utilities/common/cloneDeep.js", "../../../../../../node_modules/@apollo/client/utilities/common/maybeDeepFreeze.js", "../../../../../../node_modules/@apollo/client/utilities/observables/iteration.js", "../../../../../../node_modules/@apollo/client/utilities/observables/asyncMap.js", "../../../../../../node_modules/@apollo/client/utilities/observables/subclassing.js", "../../../../../../node_modules/@apollo/client/utilities/observables/Concast.js", "../../../../../../node_modules/@apollo/client/utilities/common/incrementalResult.js", "../../../../../../node_modules/@apollo/client/utilities/common/errorHandling.js", "../../../../../../node_modules/@apollo/client/link/utils/fromError.js", "../../../../../../node_modules/@apollo/client/link/utils/toPromise.js", "../../../../../../node_modules/@apollo/client/link/utils/fromPromise.js", "../../../../../../node_modules/@apollo/client/link/utils/throwServerError.js", "../../../../../../node_modules/@apollo/client/link/utils/validateOperation.js", "../../../../../../node_modules/@apollo/client/link/utils/createOperation.js", "../../../../../../node_modules/@apollo/client/link/utils/transformOperation.js", "../../../../../../node_modules/@apollo/client/link/utils/filterOperationVariables.js", "../../../../../../node_modules/@apollo/client/link/core/ApolloLink.js", "../../../../../../node_modules/@apollo/client/link/core/empty.js", "../../../../../../node_modules/@apollo/client/link/core/from.js", "../../../../../../node_modules/@apollo/client/link/core/split.js", "../../../../../../node_modules/@apollo/client/link/core/concat.js", "../../../../../../node_modules/@apollo/client/link/core/execute.js"],
  "sourcesContent": ["import { __extends } from \"tslib\";\nvar genericMessage = \"Invariant Violation\";\nvar _a = Object.setPrototypeOf,\n  setPrototypeOf = _a === void 0 ? function (obj, proto) {\n    obj.__proto__ = proto;\n    return obj;\n  } : _a;\nvar InvariantError = /** @class */function (_super) {\n  __extends(InvariantError, _super);\n  function InvariantError(message) {\n    if (message === void 0) {\n      message = genericMessage;\n    }\n    var _this = _super.call(this, typeof message === \"number\" ? genericMessage + \": \" + message + \" (see https://github.com/apollographql/invariant-packages)\" : message) || this;\n    _this.framesToPop = 1;\n    _this.name = genericMessage;\n    setPrototypeOf(_this, InvariantError.prototype);\n    return _this;\n  }\n  return InvariantError;\n}(Error);\nexport { InvariantError };\nexport function invariant(condition, message) {\n  if (!condition) {\n    throw new InvariantError(message);\n  }\n}\nvar verbosityLevels = [\"debug\", \"log\", \"warn\", \"error\", \"silent\"];\nvar verbosityLevel = verbosityLevels.indexOf(\"log\");\nfunction wrapConsoleMethod(name) {\n  return function () {\n    if (verbosityLevels.indexOf(name) >= verbosityLevel) {\n      // Default to console.log if this host environment happens not to provide\n      // all the console.* methods we need.\n      var method = console[name] || console.log;\n      return method.apply(console, arguments);\n    }\n  };\n}\n(function (invariant) {\n  invariant.debug = wrapConsoleMethod(\"debug\");\n  invariant.log = wrapConsoleMethod(\"log\");\n  invariant.warn = wrapConsoleMethod(\"warn\");\n  invariant.error = wrapConsoleMethod(\"error\");\n})(invariant || (invariant = {}));\nexport function setVerbosity(level) {\n  var old = verbosityLevels[verbosityLevel];\n  verbosityLevel = Math.max(0, verbosityLevels.indexOf(level));\n  return old;\n}\nexport default invariant;\n", "export var version = \"3.13.6\";\n", "export function maybe(thunk) {\n  try {\n    return thunk();\n  } catch (_a) {}\n}\n", "import { maybe } from \"./maybe.js\";\nexport default maybe(function () {\n  return globalThis;\n}) || maybe(function () {\n  return window;\n}) || maybe(function () {\n  return self;\n}) || maybe(function () {\n  return global;\n}) ||\n// We don't expect the Function constructor ever to be invoked at runtime, as\n// long as at least one of globalThis, window, self, or global is defined, so\n// we are under no obligation to make it easy for static analysis tools to\n// detect syntactic usage of the Function constructor. If you think you can\n// improve your static analysis to detect this obfuscation, think again. This\n// is an arms race you cannot win, at least not in JavaScript.\nmaybe(function () {\n  return maybe.constructor(\"return this\")();\n});\n", "var prefixCounts = new Map();\n// These IDs won't be globally unique, but they will be unique within this\n// process, thanks to the counter, and unguessable thanks to the random suffix.\nexport function makeUniqueId(prefix) {\n  var count = prefixCounts.get(prefix) || 1;\n  prefixCounts.set(prefix, count + 1);\n  return \"\".concat(prefix, \":\").concat(count, \":\").concat(Math.random().toString(36).slice(2));\n}\n", "import { makeUniqueId } from \"./makeUniqueId.js\";\nexport function stringifyForDisplay(value, space) {\n  if (space === void 0) {\n    space = 0;\n  }\n  var undefId = makeUniqueId(\"stringifyForDisplay\");\n  return JSON.stringify(value, function (key, value) {\n    return value === void 0 ? undefId : value;\n  }, space).split(JSON.stringify(undefId)).join(\"<undefined>\");\n}\n", "import { invariant as originalInvariant, InvariantError } from \"ts-invariant\";\nimport { version } from \"../../version.js\";\nimport global from \"./global.js\";\nimport { stringifyForDisplay } from \"../common/stringifyForDisplay.js\";\nfunction wrap(fn) {\n  return function (message) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n    if (typeof message === \"number\") {\n      var arg0 = message;\n      message = getHandledErrorMsg(arg0);\n      if (!message) {\n        message = getFallbackErrorMsg(arg0, args);\n        args = [];\n      }\n    }\n    fn.apply(void 0, [message].concat(args));\n  };\n}\nvar invariant = Object.assign(function invariant(condition, message) {\n  var args = [];\n  for (var _i = 2; _i < arguments.length; _i++) {\n    args[_i - 2] = arguments[_i];\n  }\n  if (!condition) {\n    originalInvariant(condition, getHandledErrorMsg(message, args) || getFallbackErrorMsg(message, args));\n  }\n}, {\n  debug: wrap(originalInvariant.debug),\n  log: wrap(originalInvariant.log),\n  warn: wrap(originalInvariant.warn),\n  error: wrap(originalInvariant.error)\n});\n/**\n * Returns an InvariantError.\n *\n * `message` can only be a string, a concatenation of strings, or a ternary statement\n * that results in a string. This will be enforced on build, where the message will\n * be replaced with a message number.\n * String substitutions with %s are supported and will also return\n * pretty-stringified objects.\n * Excess `optionalParams` will be swallowed.\n */\nfunction newInvariantError(message) {\n  var optionalParams = [];\n  for (var _i = 1; _i < arguments.length; _i++) {\n    optionalParams[_i - 1] = arguments[_i];\n  }\n  return new InvariantError(getHandledErrorMsg(message, optionalParams) || getFallbackErrorMsg(message, optionalParams));\n}\nvar ApolloErrorMessageHandler = Symbol.for(\"ApolloErrorMessageHandler_\" + version);\nfunction stringify(arg) {\n  if (typeof arg == \"string\") {\n    return arg;\n  }\n  try {\n    return stringifyForDisplay(arg, 2).slice(0, 1000);\n  } catch (_a) {\n    return \"<non-serializable>\";\n  }\n}\nfunction getHandledErrorMsg(message, messageArgs) {\n  if (messageArgs === void 0) {\n    messageArgs = [];\n  }\n  if (!message) return;\n  return global[ApolloErrorMessageHandler] && global[ApolloErrorMessageHandler](message, messageArgs.map(stringify));\n}\nfunction getFallbackErrorMsg(message, messageArgs) {\n  if (messageArgs === void 0) {\n    messageArgs = [];\n  }\n  if (!message) return;\n  return \"An error occurred! For more details, see the full error text at https://go.apollo.dev/c/err#\".concat(encodeURIComponent(JSON.stringify({\n    version: version,\n    message: message,\n    args: messageArgs.map(stringify)\n  })));\n}\nexport { invariant, InvariantError, newInvariantError, ApolloErrorMessageHandler };\n", "import { invariant, newInvariantError, InvariantError } from \"./invariantWrappers.js\";\nexport { maybe } from \"./maybe.js\";\nexport { default as global } from \"./global.js\";\nexport { invariant, newInvariantError, InvariantError };\n/**\n * @deprecated we do not use this internally anymore,\n * it is just exported for backwards compatibility\n */\n// this file is extempt from automatic `__DEV__` replacement\n// so we have to write it out here\n// @ts-ignore\nexport var DEV = globalThis.__DEV__ !== false;\nexport { DEV as __DEV__ };\n", "export function isNonNullObject(obj) {\n  return obj !== null && typeof obj === \"object\";\n}\nexport function isPlainObject(obj) {\n  return obj !== null && typeof obj === \"object\" && (Object.getPrototypeOf(obj) === Object.prototype || Object.getPrototypeOf(obj) === null);\n}\n", "import { __assign, __spreadArray } from \"tslib\";\nimport { invariant, newInvariantError } from \"../globals/index.js\";\nimport { BREAK, visit } from \"graphql\";\n/**\n * Returns a query document which adds a single query operation that only\n * spreads the target fragment inside of it.\n *\n * So for example a document of:\n *\n * ```graphql\n * fragment foo on Foo { a b c }\n * ```\n *\n * Turns into:\n *\n * ```graphql\n * { ...foo }\n *\n * fragment foo on Foo { a b c }\n * ```\n *\n * The target fragment will either be the only fragment in the document, or a\n * fragment specified by the provided `fragmentName`. If there is more than one\n * fragment, but a `fragmentName` was not defined then an error will be thrown.\n */\nexport function getFragmentQueryDocument(document, fragmentName) {\n  var actualFragmentName = fragmentName;\n  // Build an array of all our fragment definitions that will be used for\n  // validations. We also do some validations on the other definitions in the\n  // document while building this list.\n  var fragments = [];\n  document.definitions.forEach(function (definition) {\n    // Throw an error if we encounter an operation definition because we will\n    // define our own operation definition later on.\n    if (definition.kind === \"OperationDefinition\") {\n      throw newInvariantError(85, definition.operation, definition.name ? \" named '\".concat(definition.name.value, \"'\") : \"\");\n    }\n    // Add our definition to the fragments array if it is a fragment\n    // definition.\n    if (definition.kind === \"FragmentDefinition\") {\n      fragments.push(definition);\n    }\n  });\n  // If the user did not give us a fragment name then let us try to get a\n  // name from a single fragment in the definition.\n  if (typeof actualFragmentName === \"undefined\") {\n    invariant(fragments.length === 1, 86, fragments.length);\n    actualFragmentName = fragments[0].name.value;\n  }\n  // Generate a query document with an operation that simply spreads the\n  // fragment inside of it.\n  var query = __assign(__assign({}, document), {\n    definitions: __spreadArray([{\n      kind: \"OperationDefinition\",\n      // OperationTypeNode is an enum\n      operation: \"query\",\n      selectionSet: {\n        kind: \"SelectionSet\",\n        selections: [{\n          kind: \"FragmentSpread\",\n          name: {\n            kind: \"Name\",\n            value: actualFragmentName\n          }\n        }]\n      }\n    }], document.definitions, true)\n  });\n  return query;\n}\n// Utility function that takes a list of fragment definitions and makes a hash out of them\n// that maps the name of the fragment to the fragment definition.\nexport function createFragmentMap(fragments) {\n  if (fragments === void 0) {\n    fragments = [];\n  }\n  var symTable = {};\n  fragments.forEach(function (fragment) {\n    symTable[fragment.name.value] = fragment;\n  });\n  return symTable;\n}\nexport function getFragmentFromSelection(selection, fragmentMap) {\n  switch (selection.kind) {\n    case \"InlineFragment\":\n      return selection;\n    case \"FragmentSpread\":\n      {\n        var fragmentName = selection.name.value;\n        if (typeof fragmentMap === \"function\") {\n          return fragmentMap(fragmentName);\n        }\n        var fragment = fragmentMap && fragmentMap[fragmentName];\n        invariant(fragment, 87, fragmentName);\n        return fragment || null;\n      }\n    default:\n      return null;\n  }\n}\nexport function isFullyUnmaskedOperation(document) {\n  var isUnmasked = true;\n  visit(document, {\n    FragmentSpread: function (node) {\n      isUnmasked = !!node.directives && node.directives.some(function (directive) {\n        return directive.name.value === \"unmask\";\n      });\n      if (!isUnmasked) {\n        return BREAK;\n      }\n    }\n  });\n  return isUnmasked;\n}\n", "function defaultDispose() {}\nexport class StrongCache {\n  constructor(max = Infinity, dispose = defaultDispose) {\n    this.max = max;\n    this.dispose = dispose;\n    this.map = new Map();\n    this.newest = null;\n    this.oldest = null;\n  }\n  has(key) {\n    return this.map.has(key);\n  }\n  get(key) {\n    const node = this.getNode(key);\n    return node && node.value;\n  }\n  get size() {\n    return this.map.size;\n  }\n  getNode(key) {\n    const node = this.map.get(key);\n    if (node && node !== this.newest) {\n      const {\n        older,\n        newer\n      } = node;\n      if (newer) {\n        newer.older = older;\n      }\n      if (older) {\n        older.newer = newer;\n      }\n      node.older = this.newest;\n      node.older.newer = node;\n      node.newer = null;\n      this.newest = node;\n      if (node === this.oldest) {\n        this.oldest = newer;\n      }\n    }\n    return node;\n  }\n  set(key, value) {\n    let node = this.getNode(key);\n    if (node) {\n      return node.value = value;\n    }\n    node = {\n      key,\n      value,\n      newer: null,\n      older: this.newest\n    };\n    if (this.newest) {\n      this.newest.newer = node;\n    }\n    this.newest = node;\n    this.oldest = this.oldest || node;\n    this.map.set(key, node);\n    return node.value;\n  }\n  clean() {\n    while (this.oldest && this.map.size > this.max) {\n      this.delete(this.oldest.key);\n    }\n  }\n  delete(key) {\n    const node = this.map.get(key);\n    if (node) {\n      if (node === this.newest) {\n        this.newest = node.older;\n      }\n      if (node === this.oldest) {\n        this.oldest = node.newer;\n      }\n      if (node.newer) {\n        node.newer.older = node.older;\n      }\n      if (node.older) {\n        node.older.newer = node.newer;\n      }\n      this.map.delete(key);\n      this.dispose(node.value, key);\n      return true;\n    }\n    return false;\n  }\n}\n", "function noop() {}\nconst defaultDispose = noop;\nconst _WeakRef = typeof WeakRef !== \"undefined\" ? WeakRef : function (value) {\n  return {\n    deref: () => value\n  };\n};\nconst _WeakMap = typeof WeakMap !== \"undefined\" ? WeakMap : Map;\nconst _FinalizationRegistry = typeof FinalizationRegistry !== \"undefined\" ? FinalizationRegistry : function () {\n  return {\n    register: noop,\n    unregister: noop\n  };\n};\nconst finalizationBatchSize = 10024;\nexport class WeakCache {\n  constructor(max = Infinity, dispose = defaultDispose) {\n    this.max = max;\n    this.dispose = dispose;\n    this.map = new _WeakMap();\n    this.newest = null;\n    this.oldest = null;\n    this.unfinalizedNodes = new Set();\n    this.finalizationScheduled = false;\n    this.size = 0;\n    this.finalize = () => {\n      const iterator = this.unfinalizedNodes.values();\n      for (let i = 0; i < finalizationBatchSize; i++) {\n        const node = iterator.next().value;\n        if (!node) break;\n        this.unfinalizedNodes.delete(node);\n        const key = node.key;\n        delete node.key;\n        node.keyRef = new _WeakRef(key);\n        this.registry.register(key, node, node);\n      }\n      if (this.unfinalizedNodes.size > 0) {\n        queueMicrotask(this.finalize);\n      } else {\n        this.finalizationScheduled = false;\n      }\n    };\n    this.registry = new _FinalizationRegistry(this.deleteNode.bind(this));\n  }\n  has(key) {\n    return this.map.has(key);\n  }\n  get(key) {\n    const node = this.getNode(key);\n    return node && node.value;\n  }\n  getNode(key) {\n    const node = this.map.get(key);\n    if (node && node !== this.newest) {\n      const {\n        older,\n        newer\n      } = node;\n      if (newer) {\n        newer.older = older;\n      }\n      if (older) {\n        older.newer = newer;\n      }\n      node.older = this.newest;\n      node.older.newer = node;\n      node.newer = null;\n      this.newest = node;\n      if (node === this.oldest) {\n        this.oldest = newer;\n      }\n    }\n    return node;\n  }\n  set(key, value) {\n    let node = this.getNode(key);\n    if (node) {\n      return node.value = value;\n    }\n    node = {\n      key,\n      value,\n      newer: null,\n      older: this.newest\n    };\n    if (this.newest) {\n      this.newest.newer = node;\n    }\n    this.newest = node;\n    this.oldest = this.oldest || node;\n    this.scheduleFinalization(node);\n    this.map.set(key, node);\n    this.size++;\n    return node.value;\n  }\n  clean() {\n    while (this.oldest && this.size > this.max) {\n      this.deleteNode(this.oldest);\n    }\n  }\n  deleteNode(node) {\n    if (node === this.newest) {\n      this.newest = node.older;\n    }\n    if (node === this.oldest) {\n      this.oldest = node.newer;\n    }\n    if (node.newer) {\n      node.newer.older = node.older;\n    }\n    if (node.older) {\n      node.older.newer = node.newer;\n    }\n    this.size--;\n    const key = node.key || node.keyRef && node.keyRef.deref();\n    this.dispose(node.value, key);\n    if (!node.keyRef) {\n      this.unfinalizedNodes.delete(node);\n    } else {\n      this.registry.unregister(node);\n    }\n    if (key) this.map.delete(key);\n  }\n  delete(key) {\n    const node = this.map.get(key);\n    if (node) {\n      this.deleteNode(node);\n      return true;\n    }\n    return false;\n  }\n  scheduleFinalization(node) {\n    this.unfinalizedNodes.add(node);\n    if (!this.finalizationScheduled) {\n      this.finalizationScheduled = true;\n      queueMicrotask(this.finalize);\n    }\n  }\n}\n", "import { WeakCache, StrongCache } from \"@wry/caches\";\nvar scheduledCleanup = new WeakSet();\nfunction schedule(cache) {\n  if (cache.size <= (cache.max || -1)) {\n    return;\n  }\n  if (!scheduledCleanup.has(cache)) {\n    scheduledCleanup.add(cache);\n    setTimeout(function () {\n      cache.clean();\n      scheduledCleanup.delete(cache);\n    }, 100);\n  }\n}\n/**\n * @internal\n * A version of WeakCache that will auto-schedule a cleanup of the cache when\n * a new item is added and the cache reached maximum size.\n * Throttled to once per 100ms.\n *\n * @privateRemarks\n * Should be used throughout the rest of the codebase instead of WeakCache,\n * with the notable exception of usage in `wrap` from `optimism` - that one\n * already handles cleanup and should remain a `WeakCache`.\n */\nexport var AutoCleanedWeakCache = function (max, dispose) {\n  /*\n  Some builds of `WeakCache` are function prototypes, some are classes.\n  This library still builds with an ES5 target, so we can't extend the\n  real classes.\n  Instead, we have to use this workaround until we switch to a newer build\n  target.\n  */\n  var cache = new WeakCache(max, dispose);\n  cache.set = function (key, value) {\n    var ret = WeakCache.prototype.set.call(this, key, value);\n    schedule(this);\n    return ret;\n  };\n  return cache;\n};\n/**\n * @internal\n * A version of StrongCache that will auto-schedule a cleanup of the cache when\n * a new item is added and the cache reached maximum size.\n * Throttled to once per 100ms.\n *\n * @privateRemarks\n * Should be used throughout the rest of the codebase instead of StrongCache,\n * with the notable exception of usage in `wrap` from `optimism` - that one\n * already handles cleanup and should remain a `StrongCache`.\n */\nexport var AutoCleanedStrongCache = function (max, dispose) {\n  /*\n  Some builds of `StrongCache` are function prototypes, some are classes.\n  This library still builds with an ES5 target, so we can't extend the\n  real classes.\n  Instead, we have to use this workaround until we switch to a newer build\n  target.\n  */\n  var cache = new StrongCache(max, dispose);\n  cache.set = function (key, value) {\n    var ret = StrongCache.prototype.set.call(this, key, value);\n    schedule(this);\n    return ret;\n  };\n  return cache;\n};\n", "import { __assign } from \"tslib\";\nimport { global } from \"../globals/index.js\";\nvar cacheSizeSymbol = Symbol.for(\"apollo.cacheSize\");\n/**\n *\n * The global cache size configuration for Apollo Client.\n *\n * @remarks\n *\n * You can directly modify this object, but any modification will\n * only have an effect on caches that are created after the modification.\n *\n * So for global caches, such as `parser`, `canonicalStringify` and `print`,\n * you might need to call `.reset` on them, which will essentially re-create them.\n *\n * Alternatively, you can set `globalThis[Symbol.for(\"apollo.cacheSize\")]` before\n * you load the Apollo Client package:\n *\n * @example\n * ```ts\n * globalThis[Symbol.for(\"apollo.cacheSize\")] = {\n *   parser: 100\n * } satisfies Partial<CacheSizes> // the `satisfies` is optional if using TypeScript\n * ```\n */\nexport var cacheSizes = __assign({}, global[cacheSizeSymbol]);\n", "import { __assign, __spreadArray } from \"tslib\";\nimport { cacheSizes } from \"./sizes.js\";\nvar globalCaches = {};\nexport function registerGlobalCache(name, getSize) {\n  globalCaches[name] = getSize;\n}\n/**\n * For internal purposes only - please call `ApolloClient.getMemoryInternals` instead\n * @internal\n */\nexport var getApolloClientMemoryInternals = globalThis.__DEV__ !== false ? _getApolloClientMemoryInternals : undefined;\n/**\n * For internal purposes only - please call `ApolloClient.getMemoryInternals` instead\n * @internal\n */\nexport var getInMemoryCacheMemoryInternals = globalThis.__DEV__ !== false ? _getInMemoryCacheMemoryInternals : undefined;\n/**\n * For internal purposes only - please call `ApolloClient.getMemoryInternals` instead\n * @internal\n */\nexport var getApolloCacheMemoryInternals = globalThis.__DEV__ !== false ? _getApolloCacheMemoryInternals : undefined;\nfunction getCurrentCacheSizes() {\n  // `defaultCacheSizes` is a `const enum` that will be inlined during build, so we have to reconstruct it's shape here\n  var defaults = {\n    parser: 1000 /* defaultCacheSizes[\"parser\"] */,\n    canonicalStringify: 1000 /* defaultCacheSizes[\"canonicalStringify\"] */,\n    print: 2000 /* defaultCacheSizes[\"print\"] */,\n    \"documentTransform.cache\": 2000 /* defaultCacheSizes[\"documentTransform.cache\"] */,\n    \"queryManager.getDocumentInfo\": 2000 /* defaultCacheSizes[\"queryManager.getDocumentInfo\"] */,\n    \"PersistedQueryLink.persistedQueryHashes\": 2000 /* defaultCacheSizes[\"PersistedQueryLink.persistedQueryHashes\"] */,\n    \"fragmentRegistry.transform\": 2000 /* defaultCacheSizes[\"fragmentRegistry.transform\"] */,\n    \"fragmentRegistry.lookup\": 1000 /* defaultCacheSizes[\"fragmentRegistry.lookup\"] */,\n    \"fragmentRegistry.findFragmentSpreads\": 4000 /* defaultCacheSizes[\"fragmentRegistry.findFragmentSpreads\"] */,\n    \"cache.fragmentQueryDocuments\": 1000 /* defaultCacheSizes[\"cache.fragmentQueryDocuments\"] */,\n    \"removeTypenameFromVariables.getVariableDefinitions\": 2000 /* defaultCacheSizes[\"removeTypenameFromVariables.getVariableDefinitions\"] */,\n    \"inMemoryCache.maybeBroadcastWatch\": 5000 /* defaultCacheSizes[\"inMemoryCache.maybeBroadcastWatch\"] */,\n    \"inMemoryCache.executeSelectionSet\": 50000 /* defaultCacheSizes[\"inMemoryCache.executeSelectionSet\"] */,\n    \"inMemoryCache.executeSubSelectedArray\": 10000 /* defaultCacheSizes[\"inMemoryCache.executeSubSelectedArray\"] */\n  };\n  return Object.fromEntries(Object.entries(defaults).map(function (_a) {\n    var k = _a[0],\n      v = _a[1];\n    return [k, cacheSizes[k] || v];\n  }));\n}\nfunction _getApolloClientMemoryInternals() {\n  var _a, _b, _c, _d, _e;\n  if (!(globalThis.__DEV__ !== false)) throw new Error(\"only supported in development mode\");\n  return {\n    limits: getCurrentCacheSizes(),\n    sizes: __assign({\n      print: (_a = globalCaches.print) === null || _a === void 0 ? void 0 : _a.call(globalCaches),\n      parser: (_b = globalCaches.parser) === null || _b === void 0 ? void 0 : _b.call(globalCaches),\n      canonicalStringify: (_c = globalCaches.canonicalStringify) === null || _c === void 0 ? void 0 : _c.call(globalCaches),\n      links: linkInfo(this.link),\n      queryManager: {\n        getDocumentInfo: this[\"queryManager\"][\"transformCache\"].size,\n        documentTransforms: transformInfo(this[\"queryManager\"].documentTransform)\n      }\n    }, (_e = (_d = this.cache).getMemoryInternals) === null || _e === void 0 ? void 0 : _e.call(_d))\n  };\n}\nfunction _getApolloCacheMemoryInternals() {\n  return {\n    cache: {\n      fragmentQueryDocuments: getWrapperInformation(this[\"getFragmentDoc\"])\n    }\n  };\n}\nfunction _getInMemoryCacheMemoryInternals() {\n  var fragments = this.config.fragments;\n  return __assign(__assign({}, _getApolloCacheMemoryInternals.apply(this)), {\n    addTypenameDocumentTransform: transformInfo(this[\"addTypenameTransform\"]),\n    inMemoryCache: {\n      executeSelectionSet: getWrapperInformation(this[\"storeReader\"][\"executeSelectionSet\"]),\n      executeSubSelectedArray: getWrapperInformation(this[\"storeReader\"][\"executeSubSelectedArray\"]),\n      maybeBroadcastWatch: getWrapperInformation(this[\"maybeBroadcastWatch\"])\n    },\n    fragmentRegistry: {\n      findFragmentSpreads: getWrapperInformation(fragments === null || fragments === void 0 ? void 0 : fragments.findFragmentSpreads),\n      lookup: getWrapperInformation(fragments === null || fragments === void 0 ? void 0 : fragments.lookup),\n      transform: getWrapperInformation(fragments === null || fragments === void 0 ? void 0 : fragments.transform)\n    }\n  });\n}\nfunction isWrapper(f) {\n  return !!f && \"dirtyKey\" in f;\n}\nfunction getWrapperInformation(f) {\n  return isWrapper(f) ? f.size : undefined;\n}\nfunction isDefined(value) {\n  return value != null;\n}\nfunction transformInfo(transform) {\n  return recurseTransformInfo(transform).map(function (cache) {\n    return {\n      cache: cache\n    };\n  });\n}\nfunction recurseTransformInfo(transform) {\n  return transform ? __spreadArray(__spreadArray([getWrapperInformation(transform === null || transform === void 0 ? void 0 : transform[\"performWork\"])], recurseTransformInfo(transform === null || transform === void 0 ? void 0 : transform[\"left\"]), true), recurseTransformInfo(transform === null || transform === void 0 ? void 0 : transform[\"right\"]), true).filter(isDefined) : [];\n}\nfunction linkInfo(link) {\n  var _a;\n  return link ? __spreadArray(__spreadArray([(_a = link === null || link === void 0 ? void 0 : link.getMemoryInternals) === null || _a === void 0 ? void 0 : _a.call(link)], linkInfo(link === null || link === void 0 ? void 0 : link.left), true), linkInfo(link === null || link === void 0 ? void 0 : link.right), true).filter(isDefined) : [];\n}\n", "import { AutoCleanedStrongCache, cacheSizes } from \"../../utilities/caching/index.js\";\nimport { registerGlobalCache } from \"../caching/getMemoryInternals.js\";\n/**\n * Like JSON.stringify, but with object keys always sorted in the same order.\n *\n * To achieve performant sorting, this function uses a Map from JSON-serialized\n * arrays of keys (in any order) to sorted arrays of the same keys, with a\n * single sorted array reference shared by all permutations of the keys.\n *\n * As a drawback, this function will add a little bit more memory for every\n * object encountered that has different (more, less, a different order of) keys\n * than in the past.\n *\n * In a typical application, this extra memory usage should not play a\n * significant role, as `canonicalStringify` will be called for only a limited\n * number of object shapes, and the cache will not grow beyond a certain point.\n * But in some edge cases, this could be a problem, so we provide\n * canonicalStringify.reset() as a way of clearing the cache.\n * */\nexport var canonicalStringify = Object.assign(function canonicalStringify(value) {\n  return JSON.stringify(value, stableObjectReplacer);\n}, {\n  reset: function () {\n    // Clearing the sortingMap will reclaim all cached memory, without\n    // affecting the logical results of canonicalStringify, but potentially\n    // sacrificing performance until the cache is refilled.\n    sortingMap = new AutoCleanedStrongCache(cacheSizes.canonicalStringify || 1000 /* defaultCacheSizes.canonicalStringify */);\n  }\n});\nif (globalThis.__DEV__ !== false) {\n  registerGlobalCache(\"canonicalStringify\", function () {\n    return sortingMap.size;\n  });\n}\n// Values are JSON-serialized arrays of object keys (in any order), and values\n// are sorted arrays of the same keys.\nvar sortingMap;\ncanonicalStringify.reset();\n// The JSON.stringify function takes an optional second argument called a\n// replacer function. This function is called for each key-value pair in the\n// object being stringified, and its return value is used instead of the\n// original value. If the replacer function returns a new value, that value is\n// stringified as JSON instead of the original value of the property.\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#the_replacer_parameter\nfunction stableObjectReplacer(key, value) {\n  if (value && typeof value === \"object\") {\n    var proto = Object.getPrototypeOf(value);\n    // We don't want to mess with objects that are not \"plain\" objects, which\n    // means their prototype is either Object.prototype or null. This check also\n    // prevents needlessly rearranging the indices of arrays.\n    if (proto === Object.prototype || proto === null) {\n      var keys = Object.keys(value);\n      // If keys is already sorted, let JSON.stringify serialize the original\n      // value instead of creating a new object with keys in the same order.\n      if (keys.every(everyKeyInOrder)) return value;\n      var unsortedKey = JSON.stringify(keys);\n      var sortedKeys = sortingMap.get(unsortedKey);\n      if (!sortedKeys) {\n        keys.sort();\n        var sortedKey = JSON.stringify(keys);\n        // Checking for sortedKey in the sortingMap allows us to share the same\n        // sorted array reference for all permutations of the same set of keys.\n        sortedKeys = sortingMap.get(sortedKey) || keys;\n        sortingMap.set(unsortedKey, sortedKeys);\n        sortingMap.set(sortedKey, sortedKeys);\n      }\n      var sortedObject_1 = Object.create(proto);\n      // Reassigning the keys in sorted order will cause JSON.stringify to\n      // serialize them in sorted order.\n      sortedKeys.forEach(function (key) {\n        sortedObject_1[key] = value[key];\n      });\n      return sortedObject_1;\n    }\n  }\n  return value;\n}\n// Since everything that happens in stableObjectReplacer benefits from being as\n// efficient as possible, we use a static function as the callback for\n// keys.every in order to test if the provided keys are already sorted without\n// allocating extra memory for a callback.\nfunction everyKeyInOrder(key, i, keys) {\n  return i === 0 || keys[i - 1] <= key;\n}\n", "import { newInvariantError } from \"../globals/index.js\";\nimport { isNonNullObject } from \"../common/objects.js\";\nimport { getFragmentFromSelection } from \"./fragments.js\";\nimport { canonicalStringify } from \"../common/canonicalStringify.js\";\nexport function makeReference(id) {\n  return {\n    __ref: String(id)\n  };\n}\nexport function isReference(obj) {\n  return Boolean(obj && typeof obj === \"object\" && typeof obj.__ref === \"string\");\n}\nexport function isDocumentNode(value) {\n  return isNonNullObject(value) && value.kind === \"Document\" && Array.isArray(value.definitions);\n}\nfunction isStringValue(value) {\n  return value.kind === \"StringValue\";\n}\nfunction isBooleanValue(value) {\n  return value.kind === \"BooleanValue\";\n}\nfunction isIntValue(value) {\n  return value.kind === \"IntValue\";\n}\nfunction isFloatValue(value) {\n  return value.kind === \"FloatValue\";\n}\nfunction isVariable(value) {\n  return value.kind === \"Variable\";\n}\nfunction isObjectValue(value) {\n  return value.kind === \"ObjectValue\";\n}\nfunction isListValue(value) {\n  return value.kind === \"ListValue\";\n}\nfunction isEnumValue(value) {\n  return value.kind === \"EnumValue\";\n}\nfunction isNullValue(value) {\n  return value.kind === \"NullValue\";\n}\nexport function valueToObjectRepresentation(argObj, name, value, variables) {\n  if (isIntValue(value) || isFloatValue(value)) {\n    argObj[name.value] = Number(value.value);\n  } else if (isBooleanValue(value) || isStringValue(value)) {\n    argObj[name.value] = value.value;\n  } else if (isObjectValue(value)) {\n    var nestedArgObj_1 = {};\n    value.fields.map(function (obj) {\n      return valueToObjectRepresentation(nestedArgObj_1, obj.name, obj.value, variables);\n    });\n    argObj[name.value] = nestedArgObj_1;\n  } else if (isVariable(value)) {\n    var variableValue = (variables || {})[value.name.value];\n    argObj[name.value] = variableValue;\n  } else if (isListValue(value)) {\n    argObj[name.value] = value.values.map(function (listValue) {\n      var nestedArgArrayObj = {};\n      valueToObjectRepresentation(nestedArgArrayObj, name, listValue, variables);\n      return nestedArgArrayObj[name.value];\n    });\n  } else if (isEnumValue(value)) {\n    argObj[name.value] = value.value;\n  } else if (isNullValue(value)) {\n    argObj[name.value] = null;\n  } else {\n    throw newInvariantError(96, name.value, value.kind);\n  }\n}\nexport function storeKeyNameFromField(field, variables) {\n  var directivesObj = null;\n  if (field.directives) {\n    directivesObj = {};\n    field.directives.forEach(function (directive) {\n      directivesObj[directive.name.value] = {};\n      if (directive.arguments) {\n        directive.arguments.forEach(function (_a) {\n          var name = _a.name,\n            value = _a.value;\n          return valueToObjectRepresentation(directivesObj[directive.name.value], name, value, variables);\n        });\n      }\n    });\n  }\n  var argObj = null;\n  if (field.arguments && field.arguments.length) {\n    argObj = {};\n    field.arguments.forEach(function (_a) {\n      var name = _a.name,\n        value = _a.value;\n      return valueToObjectRepresentation(argObj, name, value, variables);\n    });\n  }\n  return getStoreKeyName(field.name.value, argObj, directivesObj);\n}\nvar KNOWN_DIRECTIVES = [\"connection\", \"include\", \"skip\", \"client\", \"rest\", \"export\", \"nonreactive\"];\n// Default stable JSON.stringify implementation used by getStoreKeyName. Can be\n// updated/replaced with something better by calling\n// getStoreKeyName.setStringify(newStringifyFunction).\nvar storeKeyNameStringify = canonicalStringify;\nexport var getStoreKeyName = Object.assign(function (fieldName, args, directives) {\n  if (args && directives && directives[\"connection\"] && directives[\"connection\"][\"key\"]) {\n    if (directives[\"connection\"][\"filter\"] && directives[\"connection\"][\"filter\"].length > 0) {\n      var filterKeys = directives[\"connection\"][\"filter\"] ? directives[\"connection\"][\"filter\"] : [];\n      filterKeys.sort();\n      var filteredArgs_1 = {};\n      filterKeys.forEach(function (key) {\n        filteredArgs_1[key] = args[key];\n      });\n      return \"\".concat(directives[\"connection\"][\"key\"], \"(\").concat(storeKeyNameStringify(filteredArgs_1), \")\");\n    } else {\n      return directives[\"connection\"][\"key\"];\n    }\n  }\n  var completeFieldName = fieldName;\n  if (args) {\n    // We can't use `JSON.stringify` here since it's non-deterministic,\n    // and can lead to different store key names being created even though\n    // the `args` object used during creation has the same properties/values.\n    var stringifiedArgs = storeKeyNameStringify(args);\n    completeFieldName += \"(\".concat(stringifiedArgs, \")\");\n  }\n  if (directives) {\n    Object.keys(directives).forEach(function (key) {\n      if (KNOWN_DIRECTIVES.indexOf(key) !== -1) return;\n      if (directives[key] && Object.keys(directives[key]).length) {\n        completeFieldName += \"@\".concat(key, \"(\").concat(storeKeyNameStringify(directives[key]), \")\");\n      } else {\n        completeFieldName += \"@\".concat(key);\n      }\n    });\n  }\n  return completeFieldName;\n}, {\n  setStringify: function (s) {\n    var previous = storeKeyNameStringify;\n    storeKeyNameStringify = s;\n    return previous;\n  }\n});\nexport function argumentsObjectFromField(field, variables) {\n  if (field.arguments && field.arguments.length) {\n    var argObj_1 = {};\n    field.arguments.forEach(function (_a) {\n      var name = _a.name,\n        value = _a.value;\n      return valueToObjectRepresentation(argObj_1, name, value, variables);\n    });\n    return argObj_1;\n  }\n  return null;\n}\nexport function resultKeyNameFromField(field) {\n  return field.alias ? field.alias.value : field.name.value;\n}\nexport function getTypenameFromResult(result, selectionSet, fragmentMap) {\n  var fragments;\n  for (var _i = 0, _a = selectionSet.selections; _i < _a.length; _i++) {\n    var selection = _a[_i];\n    if (isField(selection)) {\n      if (selection.name.value === \"__typename\") {\n        return result[resultKeyNameFromField(selection)];\n      }\n    } else if (fragments) {\n      fragments.push(selection);\n    } else {\n      fragments = [selection];\n    }\n  }\n  if (typeof result.__typename === \"string\") {\n    return result.__typename;\n  }\n  if (fragments) {\n    for (var _b = 0, fragments_1 = fragments; _b < fragments_1.length; _b++) {\n      var selection = fragments_1[_b];\n      var typename = getTypenameFromResult(result, getFragmentFromSelection(selection, fragmentMap).selectionSet, fragmentMap);\n      if (typeof typename === \"string\") {\n        return typename;\n      }\n    }\n  }\n}\nexport function isField(selection) {\n  return selection.kind === \"Field\";\n}\nexport function isInlineFragment(selection) {\n  return selection.kind === \"InlineFragment\";\n}\n", "// A [trie](https://en.wikipedia.org/wiki/Trie) data structure that holds\n// object keys weakly, yet can also hold non-object keys, unlike the\n// native `WeakMap`.\n// If no makeData function is supplied, the looked-up data will be an empty,\n// null-prototype Object.\nconst defaultMakeData = () => Object.create(null);\n// Useful for processing arguments objects as well as arrays.\nconst {\n  forEach,\n  slice\n} = Array.prototype;\nconst {\n  hasOwnProperty\n} = Object.prototype;\nexport class Trie {\n  constructor(weakness = true, makeData = defaultMakeData) {\n    this.weakness = weakness;\n    this.makeData = makeData;\n  }\n  lookup() {\n    return this.lookupArray(arguments);\n  }\n  lookupArray(array) {\n    let node = this;\n    forEach.call(array, key => node = node.getChildTrie(key));\n    return hasOwnProperty.call(node, \"data\") ? node.data : node.data = this.makeData(slice.call(array));\n  }\n  peek() {\n    return this.peekArray(arguments);\n  }\n  peekArray(array) {\n    let node = this;\n    for (let i = 0, len = array.length; node && i < len; ++i) {\n      const map = node.mapFor(array[i], false);\n      node = map && map.get(array[i]);\n    }\n    return node && node.data;\n  }\n  remove() {\n    return this.removeArray(arguments);\n  }\n  removeArray(array) {\n    let data;\n    if (array.length) {\n      const head = array[0];\n      const map = this.mapFor(head, false);\n      const child = map && map.get(head);\n      if (child) {\n        data = child.removeArray(slice.call(array, 1));\n        if (!child.data && !child.weak && !(child.strong && child.strong.size)) {\n          map.delete(head);\n        }\n      }\n    } else {\n      data = this.data;\n      delete this.data;\n    }\n    return data;\n  }\n  getChildTrie(key) {\n    const map = this.mapFor(key, true);\n    let child = map.get(key);\n    if (!child) map.set(key, child = new Trie(this.weakness, this.makeData));\n    return child;\n  }\n  mapFor(key, create) {\n    return this.weakness && isObjRef(key) ? this.weak || (create ? this.weak = new WeakMap() : void 0) : this.strong || (create ? this.strong = new Map() : void 0);\n  }\n}\nfunction isObjRef(value) {\n  switch (typeof value) {\n    case \"object\":\n      if (value === null) break;\n    // Fall through to return true...\n    case \"function\":\n      return true;\n  }\n  return false;\n}\n", "import { maybe } from \"../globals/index.js\";\nvar isReactNative = maybe(function () {\n  return navigator.product;\n}) == \"ReactNative\";\nexport var canUseWeakMap = typeof WeakMap === \"function\" && !(isReactNative && !global.HermesInternal);\nexport var canUseWeakSet = typeof WeakSet === \"function\";\nexport var canUseSymbol = typeof Symbol === \"function\" && typeof Symbol.for === \"function\";\nexport var canUseAsyncIteratorSymbol = canUseSymbol && Symbol.asyncIterator;\nexport var canUseDOM = typeof maybe(function () {\n  return window.document.createElement;\n}) === \"function\";\nvar usingJSDOM =\n// Following advice found in this comment from @domenic (maintainer of jsdom):\n// https://github.com/jsdom/jsdom/issues/1537#issuecomment-229405327\n//\n// Since we control the version of Jest and jsdom used when running Apollo\n// Client tests, and that version is recent enought to include \" jsdom/x.y.z\"\n// at the end of the user agent string, I believe this case is all we need to\n// check. Testing for \"Node.js\" was recommended for backwards compatibility\n// with older version of jsdom, but we don't have that problem.\nmaybe(function () {\n  return navigator.userAgent.indexOf(\"jsdom\") >= 0;\n}) || false;\n// Our tests should all continue to pass if we remove this !usingJSDOM\n// condition, thereby allowing useLayoutEffect when using jsdom. Unfortunately,\n// if we allow useLayoutEffect, then useSyncExternalStore generates many\n// warnings about useLayoutEffect doing nothing on the server. While these\n// warnings are harmless, this !usingJSDOM condition seems to be the best way to\n// prevent them (i.e. skipping useLayoutEffect when using jsdom).\nexport var canUseLayoutEffect = (canUseDOM || isReactNative) && !usingJSDOM;\n", "import { invariant, newInvariantError } from \"../globals/index.js\";\nimport { valueToObjectRepresentation } from \"./storeUtils.js\";\n// Checks the document for errors and throws an exception if there is an error.\nexport function checkDocument(doc) {\n  invariant(doc && doc.kind === \"Document\", 88);\n  var operations = doc.definitions.filter(function (d) {\n    return d.kind !== \"FragmentDefinition\";\n  }).map(function (definition) {\n    if (definition.kind !== \"OperationDefinition\") {\n      throw newInvariantError(89, definition.kind);\n    }\n    return definition;\n  });\n  invariant(operations.length <= 1, 90, operations.length);\n  return doc;\n}\nexport function getOperationDefinition(doc) {\n  checkDocument(doc);\n  return doc.definitions.filter(function (definition) {\n    return definition.kind === \"OperationDefinition\";\n  })[0];\n}\nexport function getOperationName(doc) {\n  return doc.definitions.filter(function (definition) {\n    return definition.kind === \"OperationDefinition\" && !!definition.name;\n  }).map(function (x) {\n    return x.name.value;\n  })[0] || null;\n}\n// Returns the FragmentDefinitions from a particular document as an array\nexport function getFragmentDefinitions(doc) {\n  return doc.definitions.filter(function (definition) {\n    return definition.kind === \"FragmentDefinition\";\n  });\n}\nexport function getQueryDefinition(doc) {\n  var queryDef = getOperationDefinition(doc);\n  invariant(queryDef && queryDef.operation === \"query\", 91);\n  return queryDef;\n}\nexport function getFragmentDefinition(doc) {\n  invariant(doc.kind === \"Document\", 92);\n  invariant(doc.definitions.length <= 1, 93);\n  var fragmentDef = doc.definitions[0];\n  invariant(fragmentDef.kind === \"FragmentDefinition\", 94);\n  return fragmentDef;\n}\n/**\n * Returns the first operation definition found in this document.\n * If no operation definition is found, the first fragment definition will be returned.\n * If no definitions are found, an error will be thrown.\n */\nexport function getMainDefinition(queryDoc) {\n  checkDocument(queryDoc);\n  var fragmentDefinition;\n  for (var _i = 0, _a = queryDoc.definitions; _i < _a.length; _i++) {\n    var definition = _a[_i];\n    if (definition.kind === \"OperationDefinition\") {\n      var operation = definition.operation;\n      if (operation === \"query\" || operation === \"mutation\" || operation === \"subscription\") {\n        return definition;\n      }\n    }\n    if (definition.kind === \"FragmentDefinition\" && !fragmentDefinition) {\n      // we do this because we want to allow multiple fragment definitions\n      // to precede an operation definition.\n      fragmentDefinition = definition;\n    }\n  }\n  if (fragmentDefinition) {\n    return fragmentDefinition;\n  }\n  throw newInvariantError(95);\n}\nexport function getDefaultValues(definition) {\n  var defaultValues = Object.create(null);\n  var defs = definition && definition.variableDefinitions;\n  if (defs && defs.length) {\n    defs.forEach(function (def) {\n      if (def.defaultValue) {\n        valueToObjectRepresentation(defaultValues, def.variable.name, def.defaultValue);\n      }\n    });\n  }\n  return defaultValues;\n}\n", "// This currentContext variable will only be used if the makeSlotClass\n// function is called, which happens only if this is the first copy of the\n// @wry/context package to be imported.\nlet currentContext = null;\n// This unique internal object is used to denote the absence of a value\n// for a given Slot, and is never exposed to outside code.\nconst MISSING_VALUE = {};\nlet idCounter = 1;\n// Although we can't do anything about the cost of duplicated code from\n// accidentally bundling multiple copies of the @wry/context package, we can\n// avoid creating the Slot class more than once using makeSlotClass.\nconst makeSlotClass = () => class Slot {\n  constructor() {\n    // If you have a Slot object, you can find out its slot.id, but you cannot\n    // guess the slot.id of a Slot you don't have access to, thanks to the\n    // randomized suffix.\n    this.id = [\"slot\", idCounter++, Date.now(), Math.random().toString(36).slice(2)].join(\":\");\n  }\n  hasValue() {\n    for (let context = currentContext; context; context = context.parent) {\n      // We use the Slot object iself as a key to its value, which means the\n      // value cannot be obtained without a reference to the Slot object.\n      if (this.id in context.slots) {\n        const value = context.slots[this.id];\n        if (value === MISSING_VALUE) break;\n        if (context !== currentContext) {\n          // Cache the value in currentContext.slots so the next lookup will\n          // be faster. This caching is safe because the tree of contexts and\n          // the values of the slots are logically immutable.\n          currentContext.slots[this.id] = value;\n        }\n        return true;\n      }\n    }\n    if (currentContext) {\n      // If a value was not found for this Slot, it's never going to be found\n      // no matter how many times we look it up, so we might as well cache\n      // the absence of the value, too.\n      currentContext.slots[this.id] = MISSING_VALUE;\n    }\n    return false;\n  }\n  getValue() {\n    if (this.hasValue()) {\n      return currentContext.slots[this.id];\n    }\n  }\n  withValue(value, callback,\n  // Given the prevalence of arrow functions, specifying arguments is likely\n  // to be much more common than specifying `this`, hence this ordering:\n  args, thisArg) {\n    const slots = {\n      __proto__: null,\n      [this.id]: value\n    };\n    const parent = currentContext;\n    currentContext = {\n      parent,\n      slots\n    };\n    try {\n      // Function.prototype.apply allows the arguments array argument to be\n      // omitted or undefined, so args! is fine here.\n      return callback.apply(thisArg, args);\n    } finally {\n      currentContext = parent;\n    }\n  }\n  // Capture the current context and wrap a callback function so that it\n  // reestablishes the captured context when called.\n  static bind(callback) {\n    const context = currentContext;\n    return function () {\n      const saved = currentContext;\n      try {\n        currentContext = context;\n        return callback.apply(this, arguments);\n      } finally {\n        currentContext = saved;\n      }\n    };\n  }\n  // Immediately run a callback function without any captured context.\n  static noContext(callback,\n  // Given the prevalence of arrow functions, specifying arguments is likely\n  // to be much more common than specifying `this`, hence this ordering:\n  args, thisArg) {\n    if (currentContext) {\n      const saved = currentContext;\n      try {\n        currentContext = null;\n        // Function.prototype.apply allows the arguments array argument to be\n        // omitted or undefined, so args! is fine here.\n        return callback.apply(thisArg, args);\n      } finally {\n        currentContext = saved;\n      }\n    } else {\n      return callback.apply(thisArg, args);\n    }\n  }\n};\nfunction maybe(fn) {\n  try {\n    return fn();\n  } catch (ignored) {}\n}\n// We store a single global implementation of the Slot class as a permanent\n// non-enumerable property of the globalThis object. This obfuscation does\n// nothing to prevent access to the Slot class, but at least it ensures the\n// implementation (i.e. currentContext) cannot be tampered with, and all copies\n// of the @wry/context package (hopefully just one) will share the same Slot\n// implementation. Since the first copy of the @wry/context package to be\n// imported wins, this technique imposes a steep cost for any future breaking\n// changes to the Slot class.\nconst globalKey = \"@wry/context:Slot\";\nconst host =\n// Prefer globalThis when available.\n// https://github.com/benjamn/wryware/issues/347\nmaybe(() => globalThis) ||\n// Fall back to global, which works in Node.js and may be converted by some\n// bundlers to the appropriate identifier (window, self, ...) depending on the\n// bundling target. https://github.com/endojs/endo/issues/576#issuecomment-1178515224\nmaybe(() => global) ||\n// Otherwise, use a dummy host that's local to this module. We used to fall\n// back to using the Array constructor as a namespace, but that was flagged in\n// https://github.com/benjamn/wryware/issues/347, and can be avoided.\nObject.create(null);\n// Whichever globalHost we're using, make TypeScript happy about the additional\n// globalKey property.\nconst globalHost = host;\nexport const Slot = globalHost[globalKey] ||\n// Earlier versions of this package stored the globalKey property on the Array\n// constructor, so we check there as well, to prevent Slot class duplication.\nArray[globalKey] || function (Slot) {\n  try {\n    Object.defineProperty(globalHost, globalKey, {\n      value: Slot,\n      enumerable: false,\n      writable: false,\n      // When it was possible for globalHost to be the Array constructor (a\n      // legacy Slot dedup strategy), it was important for the property to be\n      // configurable:true so it could be deleted. That does not seem to be as\n      // important when globalHost is the global object, but I don't want to\n      // cause similar problems again, and configurable:true seems safest.\n      // https://github.com/endojs/endo/issues/576#issuecomment-1178274008\n      configurable: true\n    });\n  } finally {\n    return Slot;\n  }\n}(makeSlotClass());\n", "import { Slot } from \"./slot.js\";\nexport { Slot };\nexport const {\n  bind,\n  noContext\n} = Slot;\n// Like global.setTimeout, except the callback runs with captured context.\nexport { setTimeoutWithContext as setTimeout };\nfunction setTimeoutWithContext(callback, delay) {\n  return setTimeout(bind(callback), delay);\n}\n// Turn any generator function into an async function (using yield instead\n// of await), with context automatically preserved across yields.\nexport function asyncFromGen(genFn) {\n  return function () {\n    const gen = genFn.apply(this, arguments);\n    const boundNext = bind(gen.next);\n    const boundThrow = bind(gen.throw);\n    return new Promise((resolve, reject) => {\n      function invoke(method, argument) {\n        try {\n          var result = method.call(gen, argument);\n        } catch (error) {\n          return reject(error);\n        }\n        const next = result.done ? resolve : invokeNext;\n        if (isPromiseLike(result.value)) {\n          result.value.then(next, result.done ? reject : invokeThrow);\n        } else {\n          next(result.value);\n        }\n      }\n      const invokeNext = value => invoke(boundNext, value);\n      const invokeThrow = error => invoke(boundThrow, error);\n      invokeNext();\n    });\n  };\n}\nfunction isPromiseLike(value) {\n  return value && typeof value.then === \"function\";\n}\n// If you use the fibers npm package to implement coroutines in Node.js,\n// you should call this function at least once to ensure context management\n// remains coherent across any yields.\nconst wrappedFibers = [];\nexport function wrapYieldingFiberMethods(Fiber) {\n  // There can be only one implementation of Fiber per process, so this array\n  // should never grow longer than one element.\n  if (wrappedFibers.indexOf(Fiber) < 0) {\n    const wrap = (obj, method) => {\n      const fn = obj[method];\n      obj[method] = function () {\n        return noContext(fn, arguments, this);\n      };\n    };\n    // These methods can yield, according to\n    // https://github.com/laverdet/node-fibers/blob/ddebed9b8ae3883e57f822e2108e6943e5c8d2a8/fibers.js#L97-L100\n    wrap(Fiber, \"yield\");\n    wrap(Fiber.prototype, \"run\");\n    wrap(Fiber.prototype, \"throwInto\");\n    wrappedFibers.push(Fiber);\n  }\n  return Fiber;\n}\n", "import { Slot } from \"@wry/context\";\nexport const parentEntrySlot = new Slot();\nexport function nonReactive(fn) {\n  return parentEntrySlot.withValue(void 0, fn);\n}\nexport { Slot };\nexport { bind as bindContext, noContext, setTimeout, asyncFromGen } from \"@wry/context\";\n", "export const {\n  hasOwnProperty\n} = Object.prototype;\nexport const arrayFromSet = Array.from || function (set) {\n  const array = [];\n  set.forEach(item => array.push(item));\n  return array;\n};\nexport function maybeUnsubscribe(entryOrDep) {\n  const {\n    unsubscribe\n  } = entryOrDep;\n  if (typeof unsubscribe === \"function\") {\n    entryOrDep.unsubscribe = void 0;\n    unsubscribe();\n  }\n}\n", "import { parentEntrySlot } from \"./context.js\";\nimport { maybeUnsubscribe, arrayFromSet } from \"./helpers.js\";\nconst emptySetPool = [];\nconst POOL_TARGET_SIZE = 100;\n// Since this package might be used browsers, we should avoid using the\n// Node built-in assert module.\nfunction assert(condition, optionalMessage) {\n  if (!condition) {\n    throw new Error(optionalMessage || \"assertion failure\");\n  }\n}\nfunction valueIs(a, b) {\n  const len = a.length;\n  return (\n    // Unknown values are not equal to each other.\n    len > 0 &&\n    // Both values must be ordinary (or both exceptional) to be equal.\n    len === b.length &&\n    // The underlying value or exception must be the same.\n    a[len - 1] === b[len - 1]\n  );\n}\nfunction valueGet(value) {\n  switch (value.length) {\n    case 0:\n      throw new Error(\"unknown value\");\n    case 1:\n      return value[0];\n    case 2:\n      throw value[1];\n  }\n}\nfunction valueCopy(value) {\n  return value.slice(0);\n}\nexport class Entry {\n  constructor(fn) {\n    this.fn = fn;\n    this.parents = new Set();\n    this.childValues = new Map();\n    // When this Entry has children that are dirty, this property becomes\n    // a Set containing other Entry objects, borrowed from emptySetPool.\n    // When the set becomes empty, it gets recycled back to emptySetPool.\n    this.dirtyChildren = null;\n    this.dirty = true;\n    this.recomputing = false;\n    this.value = [];\n    this.deps = null;\n    ++Entry.count;\n  }\n  peek() {\n    if (this.value.length === 1 && !mightBeDirty(this)) {\n      rememberParent(this);\n      return this.value[0];\n    }\n  }\n  // This is the most important method of the Entry API, because it\n  // determines whether the cached this.value can be returned immediately,\n  // or must be recomputed. The overall performance of the caching system\n  // depends on the truth of the following observations: (1) this.dirty is\n  // usually false, (2) this.dirtyChildren is usually null/empty, and thus\n  // (3) valueGet(this.value) is usually returned without recomputation.\n  recompute(args) {\n    assert(!this.recomputing, \"already recomputing\");\n    rememberParent(this);\n    return mightBeDirty(this) ? reallyRecompute(this, args) : valueGet(this.value);\n  }\n  setDirty() {\n    if (this.dirty) return;\n    this.dirty = true;\n    reportDirty(this);\n    // We can go ahead and unsubscribe here, since any further dirty\n    // notifications we receive will be redundant, and unsubscribing may\n    // free up some resources, e.g. file watchers.\n    maybeUnsubscribe(this);\n  }\n  dispose() {\n    this.setDirty();\n    // Sever any dependency relationships with our own children, so those\n    // children don't retain this parent Entry in their child.parents sets,\n    // thereby preventing it from being fully garbage collected.\n    forgetChildren(this);\n    // Because this entry has been kicked out of the cache (in index.js),\n    // we've lost the ability to find out if/when this entry becomes dirty,\n    // whether that happens through a subscription, because of a direct call\n    // to entry.setDirty(), or because one of its children becomes dirty.\n    // Because of this loss of future information, we have to assume the\n    // worst (that this entry might have become dirty very soon), so we must\n    // immediately mark this entry's parents as dirty. Normally we could\n    // just call entry.setDirty() rather than calling parent.setDirty() for\n    // each parent, but that would leave this entry in parent.childValues\n    // and parent.dirtyChildren, which would prevent the child from being\n    // truly forgotten.\n    eachParent(this, (parent, child) => {\n      parent.setDirty();\n      forgetChild(parent, this);\n    });\n  }\n  forget() {\n    // The code that creates Entry objects in index.ts will replace this method\n    // with one that actually removes the Entry from the cache, which will also\n    // trigger the entry.dispose method.\n    this.dispose();\n  }\n  dependOn(dep) {\n    dep.add(this);\n    if (!this.deps) {\n      this.deps = emptySetPool.pop() || new Set();\n    }\n    this.deps.add(dep);\n  }\n  forgetDeps() {\n    if (this.deps) {\n      arrayFromSet(this.deps).forEach(dep => dep.delete(this));\n      this.deps.clear();\n      emptySetPool.push(this.deps);\n      this.deps = null;\n    }\n  }\n}\nEntry.count = 0;\nfunction rememberParent(child) {\n  const parent = parentEntrySlot.getValue();\n  if (parent) {\n    child.parents.add(parent);\n    if (!parent.childValues.has(child)) {\n      parent.childValues.set(child, []);\n    }\n    if (mightBeDirty(child)) {\n      reportDirtyChild(parent, child);\n    } else {\n      reportCleanChild(parent, child);\n    }\n    return parent;\n  }\n}\nfunction reallyRecompute(entry, args) {\n  forgetChildren(entry);\n  // Set entry as the parent entry while calling recomputeNewValue(entry).\n  parentEntrySlot.withValue(entry, recomputeNewValue, [entry, args]);\n  if (maybeSubscribe(entry, args)) {\n    // If we successfully recomputed entry.value and did not fail to\n    // (re)subscribe, then this Entry is no longer explicitly dirty.\n    setClean(entry);\n  }\n  return valueGet(entry.value);\n}\nfunction recomputeNewValue(entry, args) {\n  entry.recomputing = true;\n  const {\n    normalizeResult\n  } = entry;\n  let oldValueCopy;\n  if (normalizeResult && entry.value.length === 1) {\n    oldValueCopy = valueCopy(entry.value);\n  }\n  // Make entry.value an empty array, representing an unknown value.\n  entry.value.length = 0;\n  try {\n    // If entry.fn succeeds, entry.value will become a normal Value.\n    entry.value[0] = entry.fn.apply(null, args);\n    // If we have a viable oldValueCopy to compare with the (successfully\n    // recomputed) new entry.value, and they are not already === identical, give\n    // normalizeResult a chance to pick/choose/reuse parts of oldValueCopy[0]\n    // and/or entry.value[0] to determine the final cached entry.value.\n    if (normalizeResult && oldValueCopy && !valueIs(oldValueCopy, entry.value)) {\n      try {\n        entry.value[0] = normalizeResult(entry.value[0], oldValueCopy[0]);\n      } catch (_a) {\n        // If normalizeResult throws, just use the newer value, rather than\n        // saving the exception as entry.value[1].\n      }\n    }\n  } catch (e) {\n    // If entry.fn throws, entry.value will hold that exception.\n    entry.value[1] = e;\n  }\n  // Either way, this line is always reached.\n  entry.recomputing = false;\n}\nfunction mightBeDirty(entry) {\n  return entry.dirty || !!(entry.dirtyChildren && entry.dirtyChildren.size);\n}\nfunction setClean(entry) {\n  entry.dirty = false;\n  if (mightBeDirty(entry)) {\n    // This Entry may still have dirty children, in which case we can't\n    // let our parents know we're clean just yet.\n    return;\n  }\n  reportClean(entry);\n}\nfunction reportDirty(child) {\n  eachParent(child, reportDirtyChild);\n}\nfunction reportClean(child) {\n  eachParent(child, reportCleanChild);\n}\nfunction eachParent(child, callback) {\n  const parentCount = child.parents.size;\n  if (parentCount) {\n    const parents = arrayFromSet(child.parents);\n    for (let i = 0; i < parentCount; ++i) {\n      callback(parents[i], child);\n    }\n  }\n}\n// Let a parent Entry know that one of its children may be dirty.\nfunction reportDirtyChild(parent, child) {\n  // Must have called rememberParent(child) before calling\n  // reportDirtyChild(parent, child).\n  assert(parent.childValues.has(child));\n  assert(mightBeDirty(child));\n  const parentWasClean = !mightBeDirty(parent);\n  if (!parent.dirtyChildren) {\n    parent.dirtyChildren = emptySetPool.pop() || new Set();\n  } else if (parent.dirtyChildren.has(child)) {\n    // If we already know this child is dirty, then we must have already\n    // informed our own parents that we are dirty, so we can terminate\n    // the recursion early.\n    return;\n  }\n  parent.dirtyChildren.add(child);\n  // If parent was clean before, it just became (possibly) dirty (according to\n  // mightBeDirty), since we just added child to parent.dirtyChildren.\n  if (parentWasClean) {\n    reportDirty(parent);\n  }\n}\n// Let a parent Entry know that one of its children is no longer dirty.\nfunction reportCleanChild(parent, child) {\n  // Must have called rememberChild(child) before calling\n  // reportCleanChild(parent, child).\n  assert(parent.childValues.has(child));\n  assert(!mightBeDirty(child));\n  const childValue = parent.childValues.get(child);\n  if (childValue.length === 0) {\n    parent.childValues.set(child, valueCopy(child.value));\n  } else if (!valueIs(childValue, child.value)) {\n    parent.setDirty();\n  }\n  removeDirtyChild(parent, child);\n  if (mightBeDirty(parent)) {\n    return;\n  }\n  reportClean(parent);\n}\nfunction removeDirtyChild(parent, child) {\n  const dc = parent.dirtyChildren;\n  if (dc) {\n    dc.delete(child);\n    if (dc.size === 0) {\n      if (emptySetPool.length < POOL_TARGET_SIZE) {\n        emptySetPool.push(dc);\n      }\n      parent.dirtyChildren = null;\n    }\n  }\n}\n// Removes all children from this entry and returns an array of the\n// removed children.\nfunction forgetChildren(parent) {\n  if (parent.childValues.size > 0) {\n    parent.childValues.forEach((_value, child) => {\n      forgetChild(parent, child);\n    });\n  }\n  // Remove this parent Entry from any sets to which it was added by the\n  // addToSet method.\n  parent.forgetDeps();\n  // After we forget all our children, this.dirtyChildren must be empty\n  // and therefore must have been reset to null.\n  assert(parent.dirtyChildren === null);\n}\nfunction forgetChild(parent, child) {\n  child.parents.delete(parent);\n  parent.childValues.delete(child);\n  removeDirtyChild(parent, child);\n}\nfunction maybeSubscribe(entry, args) {\n  if (typeof entry.subscribe === \"function\") {\n    try {\n      maybeUnsubscribe(entry); // Prevent double subscriptions.\n      entry.unsubscribe = entry.subscribe.apply(null, args);\n    } catch (e) {\n      // If this Entry has a subscribe function and it threw an exception\n      // (or an unsubscribe function it previously returned now throws),\n      // return false to indicate that we were not able to subscribe (or\n      // unsubscribe), and this Entry should remain dirty.\n      entry.setDirty();\n      return false;\n    }\n  }\n  // Returning true indicates either that there was no entry.subscribe\n  // function or that it succeeded.\n  return true;\n}\n", "import { parentEntrySlot } from \"./context.js\";\nimport { hasOwnProperty, maybeUnsubscribe, arrayFromSet } from \"./helpers.js\";\nconst EntryMethods = {\n  setDirty: true,\n  dispose: true,\n  forget: true // Fully remove parent Entry from LRU cache and computation graph\n};\nexport function dep(options) {\n  const depsByKey = new Map();\n  const subscribe = options && options.subscribe;\n  function depend(key) {\n    const parent = parentEntrySlot.getValue();\n    if (parent) {\n      let dep = depsByKey.get(key);\n      if (!dep) {\n        depsByKey.set(key, dep = new Set());\n      }\n      parent.dependOn(dep);\n      if (typeof subscribe === \"function\") {\n        maybeUnsubscribe(dep);\n        dep.unsubscribe = subscribe(key);\n      }\n    }\n  }\n  depend.dirty = function dirty(key, entryMethodName) {\n    const dep = depsByKey.get(key);\n    if (dep) {\n      const m = entryMethodName && hasOwnProperty.call(EntryMethods, entryMethodName) ? entryMethodName : \"setDirty\";\n      // We have to use arrayFromSet(dep).forEach instead of dep.forEach,\n      // because modifying a Set while iterating over it can cause elements in\n      // the Set to be removed from the Set before they've been iterated over.\n      arrayFromSet(dep).forEach(entry => entry[m]());\n      depsByKey.delete(key);\n      maybeUnsubscribe(dep);\n    }\n  };\n  return depend;\n}\n", "import { Trie } from \"@wry/trie\";\nimport { StrongCache } from \"@wry/caches\";\nimport { Entry } from \"./entry.js\";\nimport { parentEntrySlot } from \"./context.js\";\n// These helper functions are important for making optimism work with\n// asynchronous code. In order to register parent-child dependencies,\n// optimism needs to know about any currently active parent computations.\n// In ordinary synchronous code, the parent context is implicit in the\n// execution stack, but asynchronous code requires some extra guidance in\n// order to propagate context from one async task segment to the next.\nexport { bindContext, noContext, nonReactive, setTimeout, asyncFromGen, Slot } from \"./context.js\";\n// A lighter-weight dependency, similar to OptimisticWrapperFunction, except\n// with only one argument, no makeCacheKey, no wrapped function to recompute,\n// and no result value. Useful for representing dependency leaves in the graph\n// of computation. Subscriptions are supported.\nexport { dep } from \"./dep.js\";\n// The defaultMakeCacheKey function is remarkably powerful, because it gives\n// a unique object for any shallow-identical list of arguments. If you need\n// to implement a custom makeCacheKey function, you may find it helpful to\n// delegate the final work to defaultMakeCacheKey, which is why we export it\n// here. However, you may want to avoid defaultMakeCacheKey if your runtime\n// does not support WeakMap, or you have the ability to return a string key.\n// In those cases, just write your own custom makeCacheKey functions.\nlet defaultKeyTrie;\nexport function defaultMakeCacheKey(...args) {\n  const trie = defaultKeyTrie || (defaultKeyTrie = new Trie(typeof WeakMap === \"function\"));\n  return trie.lookupArray(args);\n}\n// If you're paranoid about memory leaks, or you want to avoid using WeakMap\n// under the hood, but you still need the behavior of defaultMakeCacheKey,\n// import this constructor to create your own tries.\nexport { Trie as KeyTrie };\n;\nconst caches = new Set();\nexport function wrap(originalFunction, {\n  max = Math.pow(2, 16),\n  keyArgs,\n  makeCacheKey = defaultMakeCacheKey,\n  normalizeResult,\n  subscribe,\n  cache: cacheOption = StrongCache\n} = Object.create(null)) {\n  const cache = typeof cacheOption === \"function\" ? new cacheOption(max, entry => entry.dispose()) : cacheOption;\n  const optimistic = function () {\n    const key = makeCacheKey.apply(null, keyArgs ? keyArgs.apply(null, arguments) : arguments);\n    if (key === void 0) {\n      return originalFunction.apply(null, arguments);\n    }\n    let entry = cache.get(key);\n    if (!entry) {\n      cache.set(key, entry = new Entry(originalFunction));\n      entry.normalizeResult = normalizeResult;\n      entry.subscribe = subscribe;\n      // Give the Entry the ability to trigger cache.delete(key), even though\n      // the Entry itself does not know about key or cache.\n      entry.forget = () => cache.delete(key);\n    }\n    const value = entry.recompute(Array.prototype.slice.call(arguments));\n    // Move this entry to the front of the least-recently used queue,\n    // since we just finished computing its value.\n    cache.set(key, entry);\n    caches.add(cache);\n    // Clean up any excess entries in the cache, but only if there is no\n    // active parent entry, meaning we're not in the middle of a larger\n    // computation that might be flummoxed by the cleaning.\n    if (!parentEntrySlot.hasValue()) {\n      caches.forEach(cache => cache.clean());\n      caches.clear();\n    }\n    return value;\n  };\n  Object.defineProperty(optimistic, \"size\", {\n    get: () => cache.size,\n    configurable: false,\n    enumerable: false\n  });\n  Object.freeze(optimistic.options = {\n    max,\n    keyArgs,\n    makeCacheKey,\n    normalizeResult,\n    subscribe,\n    cache\n  });\n  function dirtyKey(key) {\n    const entry = key && cache.get(key);\n    if (entry) {\n      entry.setDirty();\n    }\n  }\n  optimistic.dirtyKey = dirtyKey;\n  optimistic.dirty = function dirty() {\n    dirtyKey(makeCacheKey.apply(null, arguments));\n  };\n  function peekKey(key) {\n    const entry = key && cache.get(key);\n    if (entry) {\n      return entry.peek();\n    }\n  }\n  optimistic.peekKey = peekKey;\n  optimistic.peek = function peek() {\n    return peekKey(makeCacheKey.apply(null, arguments));\n  };\n  function forgetKey(key) {\n    return key ? cache.delete(key) : false;\n  }\n  optimistic.forgetKey = forgetKey;\n  optimistic.forget = function forget() {\n    return forgetKey(makeCacheKey.apply(null, arguments));\n  };\n  optimistic.makeCacheKey = makeCacheKey;\n  optimistic.getKey = keyArgs ? function getKey() {\n    return makeCacheKey.apply(null, keyArgs.apply(null, arguments));\n  } : makeCacheKey;\n  return Object.freeze(optimistic);\n}\n", "import { Trie } from \"@wry/trie\";\nimport { canUseWeakMap, canUseWeakSet } from \"../common/canUse.js\";\nimport { checkDocument } from \"./getFromAST.js\";\nimport { invariant } from \"../globals/index.js\";\nimport { WeakCache } from \"@wry/caches\";\nimport { wrap } from \"optimism\";\nimport { cacheSizes } from \"../caching/index.js\";\nfunction identity(document) {\n  return document;\n}\nvar DocumentTransform = /** @class */function () {\n  function DocumentTransform(transform, options) {\n    if (options === void 0) {\n      options = Object.create(null);\n    }\n    this.resultCache = canUseWeakSet ? new WeakSet() : new Set();\n    this.transform = transform;\n    if (options.getCacheKey) {\n      // Override default `getCacheKey` function, which returns [document].\n      this.getCacheKey = options.getCacheKey;\n    }\n    this.cached = options.cache !== false;\n    this.resetCache();\n  }\n  // This default implementation of getCacheKey can be overridden by providing\n  // options.getCacheKey to the DocumentTransform constructor. In general, a\n  // getCacheKey function may either return an array of keys (often including\n  // the document) to be used as a cache key, or undefined to indicate the\n  // transform for this document should not be cached.\n  DocumentTransform.prototype.getCacheKey = function (document) {\n    return [document];\n  };\n  DocumentTransform.identity = function () {\n    // No need to cache this transform since it just returns the document\n    // unchanged. This should save a bit of memory that would otherwise be\n    // needed to populate the `documentCache` of this transform.\n    return new DocumentTransform(identity, {\n      cache: false\n    });\n  };\n  DocumentTransform.split = function (predicate, left, right) {\n    if (right === void 0) {\n      right = DocumentTransform.identity();\n    }\n    return Object.assign(new DocumentTransform(function (document) {\n      var documentTransform = predicate(document) ? left : right;\n      return documentTransform.transformDocument(document);\n    },\n    // Reasonably assume both `left` and `right` transforms handle their own caching\n    {\n      cache: false\n    }), {\n      left: left,\n      right: right\n    });\n  };\n  /**\n   * Resets the internal cache of this transform, if it has one.\n   */\n  DocumentTransform.prototype.resetCache = function () {\n    var _this = this;\n    if (this.cached) {\n      var stableCacheKeys_1 = new Trie(canUseWeakMap);\n      this.performWork = wrap(DocumentTransform.prototype.performWork.bind(this), {\n        makeCacheKey: function (document) {\n          var cacheKeys = _this.getCacheKey(document);\n          if (cacheKeys) {\n            invariant(Array.isArray(cacheKeys), 77);\n            return stableCacheKeys_1.lookupArray(cacheKeys);\n          }\n        },\n        max: cacheSizes[\"documentTransform.cache\"],\n        cache: WeakCache\n      });\n    }\n  };\n  DocumentTransform.prototype.performWork = function (document) {\n    checkDocument(document);\n    return this.transform(document);\n  };\n  DocumentTransform.prototype.transformDocument = function (document) {\n    // If a user passes an already transformed result back to this function,\n    // immediately return it.\n    if (this.resultCache.has(document)) {\n      return document;\n    }\n    var transformedDocument = this.performWork(document);\n    this.resultCache.add(transformedDocument);\n    return transformedDocument;\n  };\n  DocumentTransform.prototype.concat = function (otherTransform) {\n    var _this = this;\n    return Object.assign(new DocumentTransform(function (document) {\n      return otherTransform.transformDocument(_this.transformDocument(document));\n    },\n    // Reasonably assume both transforms handle their own caching\n    {\n      cache: false\n    }), {\n      left: this,\n      right: otherTransform\n    });\n  };\n  return DocumentTransform;\n}();\nexport { DocumentTransform };\n", "function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (it) return (it = it.call(o)).next.bind(it);\n  if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n    if (it) o = it;\n    var i = 0;\n    return function () {\n      if (i >= o.length) return {\n        done: true\n      };\n      return {\n        done: false,\n        value: o[i++]\n      };\n    };\n  }\n  throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\n// === Symbol Support ===\nvar hasSymbols = function () {\n  return typeof Symbol === 'function';\n};\nvar hasSymbol = function (name) {\n  return hasSymbols() && Boolean(Symbol[name]);\n};\nvar getSymbol = function (name) {\n  return hasSymbol(name) ? Symbol[name] : '@@' + name;\n};\nif (hasSymbols() && !hasSymbol('observable')) {\n  Symbol.observable = Symbol('observable');\n}\nvar SymbolIterator = getSymbol('iterator');\nvar SymbolObservable = getSymbol('observable');\nvar SymbolSpecies = getSymbol('species'); // === Abstract Operations ===\n\nfunction getMethod(obj, key) {\n  var value = obj[key];\n  if (value == null) return undefined;\n  if (typeof value !== 'function') throw new TypeError(value + ' is not a function');\n  return value;\n}\nfunction getSpecies(obj) {\n  var ctor = obj.constructor;\n  if (ctor !== undefined) {\n    ctor = ctor[SymbolSpecies];\n    if (ctor === null) {\n      ctor = undefined;\n    }\n  }\n  return ctor !== undefined ? ctor : Observable;\n}\nfunction isObservable(x) {\n  return x instanceof Observable; // SPEC: Brand check\n}\nfunction hostReportError(e) {\n  if (hostReportError.log) {\n    hostReportError.log(e);\n  } else {\n    setTimeout(function () {\n      throw e;\n    });\n  }\n}\nfunction enqueue(fn) {\n  Promise.resolve().then(function () {\n    try {\n      fn();\n    } catch (e) {\n      hostReportError(e);\n    }\n  });\n}\nfunction cleanupSubscription(subscription) {\n  var cleanup = subscription._cleanup;\n  if (cleanup === undefined) return;\n  subscription._cleanup = undefined;\n  if (!cleanup) {\n    return;\n  }\n  try {\n    if (typeof cleanup === 'function') {\n      cleanup();\n    } else {\n      var unsubscribe = getMethod(cleanup, 'unsubscribe');\n      if (unsubscribe) {\n        unsubscribe.call(cleanup);\n      }\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n}\nfunction closeSubscription(subscription) {\n  subscription._observer = undefined;\n  subscription._queue = undefined;\n  subscription._state = 'closed';\n}\nfunction flushSubscription(subscription) {\n  var queue = subscription._queue;\n  if (!queue) {\n    return;\n  }\n  subscription._queue = undefined;\n  subscription._state = 'ready';\n  for (var i = 0; i < queue.length; ++i) {\n    notifySubscription(subscription, queue[i].type, queue[i].value);\n    if (subscription._state === 'closed') break;\n  }\n}\nfunction notifySubscription(subscription, type, value) {\n  subscription._state = 'running';\n  var observer = subscription._observer;\n  try {\n    var m = getMethod(observer, type);\n    switch (type) {\n      case 'next':\n        if (m) m.call(observer, value);\n        break;\n      case 'error':\n        closeSubscription(subscription);\n        if (m) m.call(observer, value);else throw value;\n        break;\n      case 'complete':\n        closeSubscription(subscription);\n        if (m) m.call(observer);\n        break;\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n  if (subscription._state === 'closed') cleanupSubscription(subscription);else if (subscription._state === 'running') subscription._state = 'ready';\n}\nfunction onNotify(subscription, type, value) {\n  if (subscription._state === 'closed') return;\n  if (subscription._state === 'buffering') {\n    subscription._queue.push({\n      type: type,\n      value: value\n    });\n    return;\n  }\n  if (subscription._state !== 'ready') {\n    subscription._state = 'buffering';\n    subscription._queue = [{\n      type: type,\n      value: value\n    }];\n    enqueue(function () {\n      return flushSubscription(subscription);\n    });\n    return;\n  }\n  notifySubscription(subscription, type, value);\n}\nvar Subscription = /*#__PURE__*/function () {\n  function Subscription(observer, subscriber) {\n    // ASSERT: observer is an object\n    // ASSERT: subscriber is callable\n    this._cleanup = undefined;\n    this._observer = observer;\n    this._queue = undefined;\n    this._state = 'initializing';\n    var subscriptionObserver = new SubscriptionObserver(this);\n    try {\n      this._cleanup = subscriber.call(undefined, subscriptionObserver);\n    } catch (e) {\n      subscriptionObserver.error(e);\n    }\n    if (this._state === 'initializing') this._state = 'ready';\n  }\n  var _proto = Subscription.prototype;\n  _proto.unsubscribe = function unsubscribe() {\n    if (this._state !== 'closed') {\n      closeSubscription(this);\n      cleanupSubscription(this);\n    }\n  };\n  _createClass(Subscription, [{\n    key: \"closed\",\n    get: function () {\n      return this._state === 'closed';\n    }\n  }]);\n  return Subscription;\n}();\nvar SubscriptionObserver = /*#__PURE__*/function () {\n  function SubscriptionObserver(subscription) {\n    this._subscription = subscription;\n  }\n  var _proto2 = SubscriptionObserver.prototype;\n  _proto2.next = function next(value) {\n    onNotify(this._subscription, 'next', value);\n  };\n  _proto2.error = function error(value) {\n    onNotify(this._subscription, 'error', value);\n  };\n  _proto2.complete = function complete() {\n    onNotify(this._subscription, 'complete');\n  };\n  _createClass(SubscriptionObserver, [{\n    key: \"closed\",\n    get: function () {\n      return this._subscription._state === 'closed';\n    }\n  }]);\n  return SubscriptionObserver;\n}();\nvar Observable = /*#__PURE__*/function () {\n  function Observable(subscriber) {\n    if (!(this instanceof Observable)) throw new TypeError('Observable cannot be called as a function');\n    if (typeof subscriber !== 'function') throw new TypeError('Observable initializer must be a function');\n    this._subscriber = subscriber;\n  }\n  var _proto3 = Observable.prototype;\n  _proto3.subscribe = function subscribe(observer) {\n    if (typeof observer !== 'object' || observer === null) {\n      observer = {\n        next: observer,\n        error: arguments[1],\n        complete: arguments[2]\n      };\n    }\n    return new Subscription(observer, this._subscriber);\n  };\n  _proto3.forEach = function forEach(fn) {\n    var _this = this;\n    return new Promise(function (resolve, reject) {\n      if (typeof fn !== 'function') {\n        reject(new TypeError(fn + ' is not a function'));\n        return;\n      }\n      function done() {\n        subscription.unsubscribe();\n        resolve();\n      }\n      var subscription = _this.subscribe({\n        next: function (value) {\n          try {\n            fn(value, done);\n          } catch (e) {\n            reject(e);\n            subscription.unsubscribe();\n          }\n        },\n        error: reject,\n        complete: resolve\n      });\n    });\n  };\n  _proto3.map = function map(fn) {\n    var _this2 = this;\n    if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n    var C = getSpecies(this);\n    return new C(function (observer) {\n      return _this2.subscribe({\n        next: function (value) {\n          try {\n            value = fn(value);\n          } catch (e) {\n            return observer.error(e);\n          }\n          observer.next(value);\n        },\n        error: function (e) {\n          observer.error(e);\n        },\n        complete: function () {\n          observer.complete();\n        }\n      });\n    });\n  };\n  _proto3.filter = function filter(fn) {\n    var _this3 = this;\n    if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n    var C = getSpecies(this);\n    return new C(function (observer) {\n      return _this3.subscribe({\n        next: function (value) {\n          try {\n            if (!fn(value)) return;\n          } catch (e) {\n            return observer.error(e);\n          }\n          observer.next(value);\n        },\n        error: function (e) {\n          observer.error(e);\n        },\n        complete: function () {\n          observer.complete();\n        }\n      });\n    });\n  };\n  _proto3.reduce = function reduce(fn) {\n    var _this4 = this;\n    if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n    var C = getSpecies(this);\n    var hasSeed = arguments.length > 1;\n    var hasValue = false;\n    var seed = arguments[1];\n    var acc = seed;\n    return new C(function (observer) {\n      return _this4.subscribe({\n        next: function (value) {\n          var first = !hasValue;\n          hasValue = true;\n          if (!first || hasSeed) {\n            try {\n              acc = fn(acc, value);\n            } catch (e) {\n              return observer.error(e);\n            }\n          } else {\n            acc = value;\n          }\n        },\n        error: function (e) {\n          observer.error(e);\n        },\n        complete: function () {\n          if (!hasValue && !hasSeed) return observer.error(new TypeError('Cannot reduce an empty sequence'));\n          observer.next(acc);\n          observer.complete();\n        }\n      });\n    });\n  };\n  _proto3.concat = function concat() {\n    var _this5 = this;\n    for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n      sources[_key] = arguments[_key];\n    }\n    var C = getSpecies(this);\n    return new C(function (observer) {\n      var subscription;\n      var index = 0;\n      function startNext(next) {\n        subscription = next.subscribe({\n          next: function (v) {\n            observer.next(v);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            if (index === sources.length) {\n              subscription = undefined;\n              observer.complete();\n            } else {\n              startNext(C.from(sources[index++]));\n            }\n          }\n        });\n      }\n      startNext(_this5);\n      return function () {\n        if (subscription) {\n          subscription.unsubscribe();\n          subscription = undefined;\n        }\n      };\n    });\n  };\n  _proto3.flatMap = function flatMap(fn) {\n    var _this6 = this;\n    if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n    var C = getSpecies(this);\n    return new C(function (observer) {\n      var subscriptions = [];\n      var outer = _this6.subscribe({\n        next: function (value) {\n          if (fn) {\n            try {\n              value = fn(value);\n            } catch (e) {\n              return observer.error(e);\n            }\n          }\n          var inner = C.from(value).subscribe({\n            next: function (value) {\n              observer.next(value);\n            },\n            error: function (e) {\n              observer.error(e);\n            },\n            complete: function () {\n              var i = subscriptions.indexOf(inner);\n              if (i >= 0) subscriptions.splice(i, 1);\n              completeIfDone();\n            }\n          });\n          subscriptions.push(inner);\n        },\n        error: function (e) {\n          observer.error(e);\n        },\n        complete: function () {\n          completeIfDone();\n        }\n      });\n      function completeIfDone() {\n        if (outer.closed && subscriptions.length === 0) observer.complete();\n      }\n      return function () {\n        subscriptions.forEach(function (s) {\n          return s.unsubscribe();\n        });\n        outer.unsubscribe();\n      };\n    });\n  };\n  _proto3[SymbolObservable] = function () {\n    return this;\n  };\n  Observable.from = function from(x) {\n    var C = typeof this === 'function' ? this : Observable;\n    if (x == null) throw new TypeError(x + ' is not an object');\n    var method = getMethod(x, SymbolObservable);\n    if (method) {\n      var observable = method.call(x);\n      if (Object(observable) !== observable) throw new TypeError(observable + ' is not an object');\n      if (isObservable(observable) && observable.constructor === C) return observable;\n      return new C(function (observer) {\n        return observable.subscribe(observer);\n      });\n    }\n    if (hasSymbol('iterator')) {\n      method = getMethod(x, SymbolIterator);\n      if (method) {\n        return new C(function (observer) {\n          enqueue(function () {\n            if (observer.closed) return;\n            for (var _iterator = _createForOfIteratorHelperLoose(method.call(x)), _step; !(_step = _iterator()).done;) {\n              var item = _step.value;\n              observer.next(item);\n              if (observer.closed) return;\n            }\n            observer.complete();\n          });\n        });\n      }\n    }\n    if (Array.isArray(x)) {\n      return new C(function (observer) {\n        enqueue(function () {\n          if (observer.closed) return;\n          for (var i = 0; i < x.length; ++i) {\n            observer.next(x[i]);\n            if (observer.closed) return;\n          }\n          observer.complete();\n        });\n      });\n    }\n    throw new TypeError(x + ' is not observable');\n  };\n  Observable.of = function of() {\n    for (var _len2 = arguments.length, items = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      items[_key2] = arguments[_key2];\n    }\n    var C = typeof this === 'function' ? this : Observable;\n    return new C(function (observer) {\n      enqueue(function () {\n        if (observer.closed) return;\n        for (var i = 0; i < items.length; ++i) {\n          observer.next(items[i]);\n          if (observer.closed) return;\n        }\n        observer.complete();\n      });\n    });\n  };\n  _createClass(Observable, null, [{\n    key: SymbolSpecies,\n    get: function () {\n      return this;\n    }\n  }]);\n  return Observable;\n}();\nif (hasSymbols()) {\n  Object.defineProperty(Observable, Symbol('extensions'), {\n    value: {\n      symbol: SymbolObservable,\n      hostReportError: hostReportError\n    },\n    configurable: true\n  });\n}\nexport { Observable };", "export default function symbolObservablePonyfill(root) {\n  var result;\n  var Symbol = root.Symbol;\n  if (typeof Symbol === 'function') {\n    if (Symbol.observable) {\n      result = Symbol.observable;\n    } else {\n      if (typeof Symbol.for === 'function') {\n        // This just needs to be something that won't trample other user's Symbol.for use\n        // It also will guide people to the source of their issues, if this is problematic.\n        // META: It's a resource locator!\n        result = Symbol.for('https://github.com/benlesh/symbol-observable');\n      } else {\n        // Symbol.for didn't exist! The best we can do at this point is a totally \n        // unique symbol. Note that the string argument here is a descriptor, not\n        // an identifier. This symbol is unique.\n        result = Symbol('https://github.com/benlesh/symbol-observable');\n      }\n      try {\n        Symbol.observable = result;\n      } catch (err) {\n        // Do nothing. In some environments, users have frozen `Symbol` for security reasons,\n        // if it is frozen assigning to it will throw. In this case, we don't care, because\n        // they will need to use the returned value from the ponyfill.\n      }\n    }\n  } else {\n    result = '@@observable';\n  }\n  return result;\n}\n;", "/* global window */\nimport ponyfill from './ponyfill.js';\nvar root;\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\nvar result = ponyfill(root);\nexport default result;", "import { Observable } from \"zen-observable-ts\";\n// This simplified polyfill attempts to follow the ECMAScript Observable\n// proposal (https://github.com/zenparsing/es-observable)\nimport \"symbol-observable\";\n// The zen-observable package defines Observable.prototype[Symbol.observable]\n// when Symbol is supported, but RxJS interop depends on also setting this fake\n// '@@observable' string as a polyfill for Symbol.observable.\nvar prototype = Observable.prototype;\nvar fakeObsSymbol = \"@@observable\";\nif (!prototype[fakeObsSymbol]) {\n  // @ts-expect-error\n  prototype[fakeObsSymbol] = function () {\n    return this;\n  };\n}\nexport { Observable };\n", "/**\n * Merges the provided objects shallowly and removes\n * all properties with an `undefined` value\n */\nexport function compact() {\n  var objects = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    objects[_i] = arguments[_i];\n  }\n  var result = Object.create(null);\n  objects.forEach(function (obj) {\n    if (!obj) return;\n    Object.keys(obj).forEach(function (key) {\n      var value = obj[key];\n      if (value !== void 0) {\n        result[key] = value;\n      }\n    });\n  });\n  return result;\n}\n", "import { __assign } from \"tslib\";\nimport { compact } from \"./compact.js\";\nexport function mergeOptions(defaults, options) {\n  return compact(defaults, options, options.variables && {\n    variables: compact(__assign(__assign({}, defaults && defaults.variables), options.variables))\n  });\n}\n", "import { invariant } from \"../globals/index.js\";\nimport { visit, BREAK, Kind } from \"graphql\";\nexport function shouldInclude(_a, variables) {\n  var directives = _a.directives;\n  if (!directives || !directives.length) {\n    return true;\n  }\n  return getInclusionDirectives(directives).every(function (_a) {\n    var directive = _a.directive,\n      ifArgument = _a.ifArgument;\n    var evaledValue = false;\n    if (ifArgument.value.kind === \"Variable\") {\n      evaledValue = variables && variables[ifArgument.value.name.value];\n      invariant(evaledValue !== void 0, 78, directive.name.value);\n    } else {\n      evaledValue = ifArgument.value.value;\n    }\n    return directive.name.value === \"skip\" ? !evaledValue : evaledValue;\n  });\n}\nexport function getDirectiveNames(root) {\n  var names = [];\n  visit(root, {\n    Directive: function (node) {\n      names.push(node.name.value);\n    }\n  });\n  return names;\n}\nexport var hasAnyDirectives = function (names, root) {\n  return hasDirectives(names, root, false);\n};\nexport var hasAllDirectives = function (names, root) {\n  return hasDirectives(names, root, true);\n};\nexport function hasDirectives(names, root, all) {\n  var nameSet = new Set(names);\n  var uniqueCount = nameSet.size;\n  visit(root, {\n    Directive: function (node) {\n      if (nameSet.delete(node.name.value) && (!all || !nameSet.size)) {\n        return BREAK;\n      }\n    }\n  });\n  // If we found all the names, nameSet will be empty. If we only care about\n  // finding some of them, the < condition is sufficient.\n  return all ? !nameSet.size : nameSet.size < uniqueCount;\n}\nexport function hasClientExports(document) {\n  return document && hasDirectives([\"client\", \"export\"], document, true);\n}\nfunction isInclusionDirective(_a) {\n  var value = _a.name.value;\n  return value === \"skip\" || value === \"include\";\n}\nexport function getInclusionDirectives(directives) {\n  var result = [];\n  if (directives && directives.length) {\n    directives.forEach(function (directive) {\n      if (!isInclusionDirective(directive)) return;\n      var directiveArguments = directive.arguments;\n      var directiveName = directive.name.value;\n      invariant(directiveArguments && directiveArguments.length === 1, 79, directiveName);\n      var ifArgument = directiveArguments[0];\n      invariant(ifArgument.name && ifArgument.name.value === \"if\", 80, directiveName);\n      var ifValue = ifArgument.value;\n      // means it has to be a variable value if this is a valid @skip or @include directive\n      invariant(ifValue && (ifValue.kind === \"Variable\" || ifValue.kind === \"BooleanValue\"), 81, directiveName);\n      result.push({\n        directive: directive,\n        ifArgument: ifArgument\n      });\n    });\n  }\n  return result;\n}\n/** @internal */\nexport function getFragmentMaskMode(fragment) {\n  var _a, _b;\n  var directive = (_a = fragment.directives) === null || _a === void 0 ? void 0 : _a.find(function (_a) {\n    var name = _a.name;\n    return name.value === \"unmask\";\n  });\n  if (!directive) {\n    return \"mask\";\n  }\n  var modeArg = (_b = directive.arguments) === null || _b === void 0 ? void 0 : _b.find(function (_a) {\n    var name = _a.name;\n    return name.value === \"mode\";\n  });\n  if (globalThis.__DEV__ !== false) {\n    if (modeArg) {\n      if (modeArg.value.kind === Kind.VARIABLE) {\n        globalThis.__DEV__ !== false && invariant.warn(82);\n      } else if (modeArg.value.kind !== Kind.STRING) {\n        globalThis.__DEV__ !== false && invariant.warn(83);\n      } else if (modeArg.value.value !== \"migrate\") {\n        globalThis.__DEV__ !== false && invariant.warn(84, modeArg.value.value);\n      }\n    }\n  }\n  if (modeArg && \"value\" in modeArg.value && modeArg.value.value === \"migrate\") {\n    return \"migrate\";\n  }\n  return \"unmask\";\n}\n", "import { print as origPrint } from \"graphql\";\nimport { AutoCleanedWeakCache, cacheSizes } from \"../caching/index.js\";\nimport { registerGlobalCache } from \"../caching/getMemoryInternals.js\";\nvar printCache;\nexport var print = Object.assign(function (ast) {\n  var result = printCache.get(ast);\n  if (!result) {\n    result = origPrint(ast);\n    printCache.set(ast, result);\n  }\n  return result;\n}, {\n  reset: function () {\n    printCache = new AutoCleanedWeakCache(cacheSizes.print || 2000 /* defaultCacheSizes.print */);\n  }\n});\nprint.reset();\nif (globalThis.__DEV__ !== false) {\n  registerGlobalCache(\"print\", function () {\n    return printCache ? printCache.size : 0;\n  });\n}\n", "// A version of Array.isArray that works better with readonly arrays.\nexport var isArray = Array.isArray;\nexport function isNonEmptyArray(value) {\n  return Array.isArray(value) && value.length > 0;\n}\n", "import { __assign, __spreadArray } from \"tslib\";\nimport { invariant } from \"../globals/index.js\";\nimport { visit, Kind } from \"graphql\";\nimport { checkDocument, getOperationDefinition, getFragmentDefinition, getFragmentDefinitions, getMainDefinition } from \"./getFromAST.js\";\nimport { isField } from \"./storeUtils.js\";\nimport { createFragmentMap } from \"./fragments.js\";\nimport { isArray, isNonEmptyArray } from \"../common/arrays.js\";\nvar TYPENAME_FIELD = {\n  kind: Kind.FIELD,\n  name: {\n    kind: Kind.NAME,\n    value: \"__typename\"\n  }\n};\nfunction isEmpty(op, fragmentMap) {\n  return !op || op.selectionSet.selections.every(function (selection) {\n    return selection.kind === Kind.FRAGMENT_SPREAD && isEmpty(fragmentMap[selection.name.value], fragmentMap);\n  });\n}\nfunction nullIfDocIsEmpty(doc) {\n  return isEmpty(getOperationDefinition(doc) || getFragmentDefinition(doc), createFragmentMap(getFragmentDefinitions(doc))) ? null : doc;\n}\nfunction getDirectiveMatcher(configs) {\n  var names = new Map();\n  var tests = new Map();\n  configs.forEach(function (directive) {\n    if (directive) {\n      if (directive.name) {\n        names.set(directive.name, directive);\n      } else if (directive.test) {\n        tests.set(directive.test, directive);\n      }\n    }\n  });\n  return function (directive) {\n    var config = names.get(directive.name.value);\n    if (!config && tests.size) {\n      tests.forEach(function (testConfig, test) {\n        if (test(directive)) {\n          config = testConfig;\n        }\n      });\n    }\n    return config;\n  };\n}\nfunction makeInUseGetterFunction(defaultKey) {\n  var map = new Map();\n  return function inUseGetterFunction(key) {\n    if (key === void 0) {\n      key = defaultKey;\n    }\n    var inUse = map.get(key);\n    if (!inUse) {\n      map.set(key, inUse = {\n        // Variable and fragment spread names used directly within this\n        // operation or fragment definition, as identified by key. These sets\n        // will be populated during the first traversal of the document in\n        // removeDirectivesFromDocument below.\n        variables: new Set(),\n        fragmentSpreads: new Set()\n      });\n    }\n    return inUse;\n  };\n}\nexport function removeDirectivesFromDocument(directives, doc) {\n  checkDocument(doc);\n  // Passing empty strings to makeInUseGetterFunction means we handle anonymous\n  // operations as if their names were \"\". Anonymous fragment definitions are\n  // not supposed to be possible, but the same default naming strategy seems\n  // appropriate for that case as well.\n  var getInUseByOperationName = makeInUseGetterFunction(\"\");\n  var getInUseByFragmentName = makeInUseGetterFunction(\"\");\n  var getInUse = function (ancestors) {\n    for (var p = 0, ancestor = void 0; p < ancestors.length && (ancestor = ancestors[p]); ++p) {\n      if (isArray(ancestor)) continue;\n      if (ancestor.kind === Kind.OPERATION_DEFINITION) {\n        // If an operation is anonymous, we use the empty string as its key.\n        return getInUseByOperationName(ancestor.name && ancestor.name.value);\n      }\n      if (ancestor.kind === Kind.FRAGMENT_DEFINITION) {\n        return getInUseByFragmentName(ancestor.name.value);\n      }\n    }\n    globalThis.__DEV__ !== false && invariant.error(97);\n    return null;\n  };\n  var operationCount = 0;\n  for (var i = doc.definitions.length - 1; i >= 0; --i) {\n    if (doc.definitions[i].kind === Kind.OPERATION_DEFINITION) {\n      ++operationCount;\n    }\n  }\n  var directiveMatcher = getDirectiveMatcher(directives);\n  var shouldRemoveField = function (nodeDirectives) {\n    return isNonEmptyArray(nodeDirectives) && nodeDirectives.map(directiveMatcher).some(function (config) {\n      return config && config.remove;\n    });\n  };\n  var originalFragmentDefsByPath = new Map();\n  // Any time the first traversal of the document below makes a change like\n  // removing a fragment (by returning null), this variable should be set to\n  // true. Once it becomes true, it should never be set to false again. If this\n  // variable remains false throughout the traversal, then we can return the\n  // original doc immediately without any modifications.\n  var firstVisitMadeChanges = false;\n  var fieldOrInlineFragmentVisitor = {\n    enter: function (node) {\n      if (shouldRemoveField(node.directives)) {\n        firstVisitMadeChanges = true;\n        return null;\n      }\n    }\n  };\n  var docWithoutDirectiveSubtrees = visit(doc, {\n    // These two AST node types share the same implementation, defined above.\n    Field: fieldOrInlineFragmentVisitor,\n    InlineFragment: fieldOrInlineFragmentVisitor,\n    VariableDefinition: {\n      enter: function () {\n        // VariableDefinition nodes do not count as variables in use, though\n        // they do contain Variable nodes that might be visited below. To avoid\n        // counting variable declarations as usages, we skip visiting the\n        // contents of this VariableDefinition node by returning false.\n        return false;\n      }\n    },\n    Variable: {\n      enter: function (node, _key, _parent, _path, ancestors) {\n        var inUse = getInUse(ancestors);\n        if (inUse) {\n          inUse.variables.add(node.name.value);\n        }\n      }\n    },\n    FragmentSpread: {\n      enter: function (node, _key, _parent, _path, ancestors) {\n        if (shouldRemoveField(node.directives)) {\n          firstVisitMadeChanges = true;\n          return null;\n        }\n        var inUse = getInUse(ancestors);\n        if (inUse) {\n          inUse.fragmentSpreads.add(node.name.value);\n        }\n        // We might like to remove this FragmentSpread by returning null here if\n        // the corresponding FragmentDefinition node is also going to be removed\n        // by the logic below, but we can't control the relative order of those\n        // events, so we have to postpone the removal of dangling FragmentSpread\n        // nodes until after the current visit of the document has finished.\n      }\n    },\n    FragmentDefinition: {\n      enter: function (node, _key, _parent, path) {\n        originalFragmentDefsByPath.set(JSON.stringify(path), node);\n      },\n      leave: function (node, _key, _parent, path) {\n        var originalNode = originalFragmentDefsByPath.get(JSON.stringify(path));\n        if (node === originalNode) {\n          // If the FragmentNode received by this leave function is identical to\n          // the one received by the corresponding enter function (above), then\n          // the visitor must not have made any changes within this\n          // FragmentDefinition node. This fragment definition may still be\n          // removed if there are no ...spread references to it, but it won't be\n          // removed just because it has only a __typename field.\n          return node;\n        }\n        if (\n        // This logic applies only if the document contains one or more\n        // operations, since removing all fragments from a document containing\n        // only fragments makes the document useless.\n        operationCount > 0 && node.selectionSet.selections.every(function (selection) {\n          return selection.kind === Kind.FIELD && selection.name.value === \"__typename\";\n        })) {\n          // This is a somewhat opinionated choice: if a FragmentDefinition ends\n          // up having no fields other than __typename, we remove the whole\n          // fragment definition, and later prune ...spread references to it.\n          getInUseByFragmentName(node.name.value).removed = true;\n          firstVisitMadeChanges = true;\n          return null;\n        }\n      }\n    },\n    Directive: {\n      leave: function (node) {\n        // If a matching directive is found, remove the directive itself. Note\n        // that this does not remove the target (field, argument, etc) of the\n        // directive, but only the directive itself.\n        if (directiveMatcher(node)) {\n          firstVisitMadeChanges = true;\n          return null;\n        }\n      }\n    }\n  });\n  if (!firstVisitMadeChanges) {\n    // If our first pass did not change anything about the document, then there\n    // is no cleanup we need to do, and we can return the original doc.\n    return doc;\n  }\n  // Utility for making sure inUse.transitiveVars is recursively populated.\n  // Because this logic assumes inUse.fragmentSpreads has been completely\n  // populated and inUse.removed has been set if appropriate,\n  // populateTransitiveVars must be called after that information has been\n  // collected by the first traversal of the document.\n  var populateTransitiveVars = function (inUse) {\n    if (!inUse.transitiveVars) {\n      inUse.transitiveVars = new Set(inUse.variables);\n      if (!inUse.removed) {\n        inUse.fragmentSpreads.forEach(function (childFragmentName) {\n          populateTransitiveVars(getInUseByFragmentName(childFragmentName)).transitiveVars.forEach(function (varName) {\n            inUse.transitiveVars.add(varName);\n          });\n        });\n      }\n    }\n    return inUse;\n  };\n  // Since we've been keeping track of fragment spreads used by particular\n  // operations and fragment definitions, we now need to compute the set of all\n  // spreads used (transitively) by any operations in the document.\n  var allFragmentNamesUsed = new Set();\n  docWithoutDirectiveSubtrees.definitions.forEach(function (def) {\n    if (def.kind === Kind.OPERATION_DEFINITION) {\n      populateTransitiveVars(getInUseByOperationName(def.name && def.name.value)).fragmentSpreads.forEach(function (childFragmentName) {\n        allFragmentNamesUsed.add(childFragmentName);\n      });\n    } else if (def.kind === Kind.FRAGMENT_DEFINITION &&\n    // If there are no operations in the document, then all fragment\n    // definitions count as usages of their own fragment names. This heuristic\n    // prevents accidentally removing all fragment definitions from the\n    // document just because it contains no operations that use the fragments.\n    operationCount === 0 && !getInUseByFragmentName(def.name.value).removed) {\n      allFragmentNamesUsed.add(def.name.value);\n    }\n  });\n  // Now that we have added all fragment spreads used by operations to the\n  // allFragmentNamesUsed set, we can complete the set by transitively adding\n  // all fragment spreads used by those fragments, and so on.\n  allFragmentNamesUsed.forEach(function (fragmentName) {\n    // Once all the childFragmentName strings added here have been seen already,\n    // the top-level allFragmentNamesUsed.forEach loop will terminate.\n    populateTransitiveVars(getInUseByFragmentName(fragmentName)).fragmentSpreads.forEach(function (childFragmentName) {\n      allFragmentNamesUsed.add(childFragmentName);\n    });\n  });\n  var fragmentWillBeRemoved = function (fragmentName) {\n    return !!(\n    // A fragment definition will be removed if there are no spreads that refer\n    // to it, or the fragment was explicitly removed because it had no fields\n    // other than __typename.\n    !allFragmentNamesUsed.has(fragmentName) || getInUseByFragmentName(fragmentName).removed);\n  };\n  var enterVisitor = {\n    enter: function (node) {\n      if (fragmentWillBeRemoved(node.name.value)) {\n        return null;\n      }\n    }\n  };\n  return nullIfDocIsEmpty(visit(docWithoutDirectiveSubtrees, {\n    // If the fragment is going to be removed, then leaving any dangling\n    // FragmentSpread nodes with the same name would be a mistake.\n    FragmentSpread: enterVisitor,\n    // This is where the fragment definition is actually removed.\n    FragmentDefinition: enterVisitor,\n    OperationDefinition: {\n      leave: function (node) {\n        // Upon leaving each operation in the depth-first AST traversal, prune\n        // any variables that are declared by the operation but unused within.\n        if (node.variableDefinitions) {\n          var usedVariableNames_1 = populateTransitiveVars(\n          // If an operation is anonymous, we use the empty string as its key.\n          getInUseByOperationName(node.name && node.name.value)).transitiveVars;\n          // According to the GraphQL spec, all variables declared by an\n          // operation must either be used by that operation or used by some\n          // fragment included transitively into that operation:\n          // https://spec.graphql.org/draft/#sec-All-Variables-Used\n          //\n          // To stay on the right side of this validation rule, if/when we\n          // remove the last $var references from an operation or its fragments,\n          // we must also remove the corresponding $var declaration from the\n          // enclosing operation. This pruning applies only to operations and\n          // not fragment definitions, at the moment. Fragments may be able to\n          // declare variables eventually, but today they can only consume them.\n          if (usedVariableNames_1.size < node.variableDefinitions.length) {\n            return __assign(__assign({}, node), {\n              variableDefinitions: node.variableDefinitions.filter(function (varDef) {\n                return usedVariableNames_1.has(varDef.variable.name.value);\n              })\n            });\n          }\n        }\n      }\n    }\n  }));\n}\nexport var addTypenameToDocument = Object.assign(function (doc) {\n  return visit(doc, {\n    SelectionSet: {\n      enter: function (node, _key, parent) {\n        // Don't add __typename to OperationDefinitions.\n        if (parent && parent.kind === Kind.OPERATION_DEFINITION) {\n          return;\n        }\n        // No changes if no selections.\n        var selections = node.selections;\n        if (!selections) {\n          return;\n        }\n        // If selections already have a __typename, or are part of an\n        // introspection query, do nothing.\n        var skip = selections.some(function (selection) {\n          return isField(selection) && (selection.name.value === \"__typename\" || selection.name.value.lastIndexOf(\"__\", 0) === 0);\n        });\n        if (skip) {\n          return;\n        }\n        // If this SelectionSet is @export-ed as an input variable, it should\n        // not have a __typename field (see issue #4691).\n        var field = parent;\n        if (isField(field) && field.directives && field.directives.some(function (d) {\n          return d.name.value === \"export\";\n        })) {\n          return;\n        }\n        // Create and return a new SelectionSet with a __typename Field.\n        return __assign(__assign({}, node), {\n          selections: __spreadArray(__spreadArray([], selections, true), [TYPENAME_FIELD], false)\n        });\n      }\n    }\n  });\n}, {\n  added: function (field) {\n    return field === TYPENAME_FIELD;\n  }\n});\nvar connectionRemoveConfig = {\n  test: function (directive) {\n    var willRemove = directive.name.value === \"connection\";\n    if (willRemove) {\n      if (!directive.arguments || !directive.arguments.some(function (arg) {\n        return arg.name.value === \"key\";\n      })) {\n        globalThis.__DEV__ !== false && invariant.warn(98);\n      }\n    }\n    return willRemove;\n  }\n};\nexport function removeConnectionDirectiveFromDocument(doc) {\n  return removeDirectivesFromDocument([connectionRemoveConfig], checkDocument(doc));\n}\nfunction hasDirectivesInSelectionSet(directives, selectionSet, nestedCheck) {\n  if (nestedCheck === void 0) {\n    nestedCheck = true;\n  }\n  return !!selectionSet && selectionSet.selections && selectionSet.selections.some(function (selection) {\n    return hasDirectivesInSelection(directives, selection, nestedCheck);\n  });\n}\nfunction hasDirectivesInSelection(directives, selection, nestedCheck) {\n  if (nestedCheck === void 0) {\n    nestedCheck = true;\n  }\n  if (!isField(selection)) {\n    return true;\n  }\n  if (!selection.directives) {\n    return false;\n  }\n  return selection.directives.some(getDirectiveMatcher(directives)) || nestedCheck && hasDirectivesInSelectionSet(directives, selection.selectionSet, nestedCheck);\n}\nfunction getArgumentMatcher(config) {\n  return function argumentMatcher(argument) {\n    return config.some(function (aConfig) {\n      return argument.value && argument.value.kind === Kind.VARIABLE && argument.value.name && (aConfig.name === argument.value.name.value || aConfig.test && aConfig.test(argument));\n    });\n  };\n}\nexport function removeArgumentsFromDocument(config, doc) {\n  var argMatcher = getArgumentMatcher(config);\n  return nullIfDocIsEmpty(visit(doc, {\n    OperationDefinition: {\n      enter: function (node) {\n        return __assign(__assign({}, node), {\n          // Remove matching top level variables definitions.\n          variableDefinitions: node.variableDefinitions ? node.variableDefinitions.filter(function (varDef) {\n            return !config.some(function (arg) {\n              return arg.name === varDef.variable.name.value;\n            });\n          }) : []\n        });\n      }\n    },\n    Field: {\n      enter: function (node) {\n        // If `remove` is set to true for an argument, and an argument match\n        // is found for a field, remove the field as well.\n        var shouldRemoveField = config.some(function (argConfig) {\n          return argConfig.remove;\n        });\n        if (shouldRemoveField) {\n          var argMatchCount_1 = 0;\n          if (node.arguments) {\n            node.arguments.forEach(function (arg) {\n              if (argMatcher(arg)) {\n                argMatchCount_1 += 1;\n              }\n            });\n          }\n          if (argMatchCount_1 === 1) {\n            return null;\n          }\n        }\n      }\n    },\n    Argument: {\n      enter: function (node) {\n        // Remove all matching arguments.\n        if (argMatcher(node)) {\n          return null;\n        }\n      }\n    }\n  }));\n}\nexport function removeFragmentSpreadFromDocument(config, doc) {\n  function enter(node) {\n    if (config.some(function (def) {\n      return def.name === node.name.value;\n    })) {\n      return null;\n    }\n  }\n  return nullIfDocIsEmpty(visit(doc, {\n    FragmentSpread: {\n      enter: enter\n    },\n    FragmentDefinition: {\n      enter: enter\n    }\n  }));\n}\n// If the incoming document is a query, return it as is. Otherwise, build a\n// new document containing a query operation based on the selection set\n// of the previous main operation.\nexport function buildQueryFromSelectionSet(document) {\n  var definition = getMainDefinition(document);\n  var definitionOperation = definition.operation;\n  if (definitionOperation === \"query\") {\n    // Already a query, so return the existing document.\n    return document;\n  }\n  // Build a new query using the selection set of the main operation.\n  var modifiedDoc = visit(document, {\n    OperationDefinition: {\n      enter: function (node) {\n        return __assign(__assign({}, node), {\n          operation: \"query\"\n        });\n      }\n    }\n  });\n  return modifiedDoc;\n}\n// Remove fields / selection sets that include an @client directive.\nexport function removeClientSetsFromDocument(document) {\n  checkDocument(document);\n  var modifiedDoc = removeDirectivesFromDocument([{\n    test: function (directive) {\n      return directive.name.value === \"client\";\n    },\n    remove: true\n  }], document);\n  return modifiedDoc;\n}\nexport function addNonReactiveToNamedFragments(document) {\n  checkDocument(document);\n  return visit(document, {\n    FragmentSpread: function (node) {\n      var _a;\n      // Do not add `@nonreactive` if the fragment is marked with `@unmask`\n      // since we want to react to changes in this fragment.\n      if ((_a = node.directives) === null || _a === void 0 ? void 0 : _a.some(function (directive) {\n        return directive.name.value === \"unmask\";\n      })) {\n        return;\n      }\n      return __assign(__assign({}, node), {\n        directives: __spreadArray(__spreadArray([], node.directives || [], true), [{\n          kind: Kind.DIRECTIVE,\n          name: {\n            kind: Kind.NAME,\n            value: \"nonreactive\"\n          }\n        }], false)\n      });\n    }\n  });\n}\n", "import { __assign, __spreadArray } from \"tslib\";\nimport { isNonNullObject } from \"./objects.js\";\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nexport function mergeDeep() {\n  var sources = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    sources[_i] = arguments[_i];\n  }\n  return mergeDeepArray(sources);\n}\n// In almost any situation where you could succeed in getting the\n// TypeScript compiler to infer a tuple type for the sources array, you\n// could just use mergeDeep instead of mergeDeepArray, so instead of\n// trying to convert T[] to an intersection type we just infer the array\n// element type, which works perfectly when the sources array has a\n// consistent element type.\nexport function mergeDeepArray(sources) {\n  var target = sources[0] || {};\n  var count = sources.length;\n  if (count > 1) {\n    var merger = new DeepMerger();\n    for (var i = 1; i < count; ++i) {\n      target = merger.merge(target, sources[i]);\n    }\n  }\n  return target;\n}\nvar defaultReconciler = function (target, source, property) {\n  return this.merge(target[property], source[property]);\n};\nvar DeepMerger = /** @class */function () {\n  function DeepMerger(reconciler) {\n    if (reconciler === void 0) {\n      reconciler = defaultReconciler;\n    }\n    this.reconciler = reconciler;\n    this.isObject = isNonNullObject;\n    this.pastCopies = new Set();\n  }\n  DeepMerger.prototype.merge = function (target, source) {\n    var _this = this;\n    var context = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n      context[_i - 2] = arguments[_i];\n    }\n    if (isNonNullObject(source) && isNonNullObject(target)) {\n      Object.keys(source).forEach(function (sourceKey) {\n        if (hasOwnProperty.call(target, sourceKey)) {\n          var targetValue = target[sourceKey];\n          if (source[sourceKey] !== targetValue) {\n            var result = _this.reconciler.apply(_this, __spreadArray([target, source, sourceKey], context, false));\n            // A well-implemented reconciler may return targetValue to indicate\n            // the merge changed nothing about the structure of the target.\n            if (result !== targetValue) {\n              target = _this.shallowCopyForMerge(target);\n              target[sourceKey] = result;\n            }\n          }\n        } else {\n          // If there is no collision, the target can safely share memory with\n          // the source, and the recursion can terminate here.\n          target = _this.shallowCopyForMerge(target);\n          target[sourceKey] = source[sourceKey];\n        }\n      });\n      return target;\n    }\n    // If source (or target) is not an object, let source replace target.\n    return source;\n  };\n  DeepMerger.prototype.shallowCopyForMerge = function (value) {\n    if (isNonNullObject(value)) {\n      if (!this.pastCopies.has(value)) {\n        if (Array.isArray(value)) {\n          value = value.slice(0);\n        } else {\n          value = __assign({\n            __proto__: Object.getPrototypeOf(value)\n          }, value);\n        }\n        this.pastCopies.add(value);\n      }\n    }\n    return value;\n  };\n  return DeepMerger;\n}();\nexport { DeepMerger };\n", "export function preventUnhandledRejection(promise) {\n  promise.catch(function () {});\n  return promise;\n}\n", "var toString = Object.prototype.toString;\n/**\n * Deeply clones a value to create a new instance.\n */\nexport function cloneDeep(value) {\n  return cloneDeepHelper(value);\n}\nfunction cloneDeepHelper(val, seen) {\n  switch (toString.call(val)) {\n    case \"[object Array]\":\n      {\n        seen = seen || new Map();\n        if (seen.has(val)) return seen.get(val);\n        var copy_1 = val.slice(0);\n        seen.set(val, copy_1);\n        copy_1.forEach(function (child, i) {\n          copy_1[i] = cloneDeepHelper(child, seen);\n        });\n        return copy_1;\n      }\n    case \"[object Object]\":\n      {\n        seen = seen || new Map();\n        if (seen.has(val)) return seen.get(val);\n        // High fidelity polyfills of Object.create and Object.getPrototypeOf are\n        // possible in all JS environments, so we will assume they exist/work.\n        var copy_2 = Object.create(Object.getPrototypeOf(val));\n        seen.set(val, copy_2);\n        Object.keys(val).forEach(function (key) {\n          copy_2[key] = cloneDeepHelper(val[key], seen);\n        });\n        return copy_2;\n      }\n    default:\n      return val;\n  }\n}\n", "import { isNonNullObject } from \"./objects.js\";\nexport function deepFreeze(value) {\n  var workSet = new Set([value]);\n  workSet.forEach(function (obj) {\n    if (isNonNullObject(obj) && shallowFreeze(obj) === obj) {\n      Object.getOwnPropertyNames(obj).forEach(function (name) {\n        if (isNonNullObject(obj[name])) workSet.add(obj[name]);\n      });\n    }\n  });\n  return value;\n}\nfunction shallowFreeze(obj) {\n  if (globalThis.__DEV__ !== false && !Object.isFrozen(obj)) {\n    try {\n      Object.freeze(obj);\n    } catch (e) {\n      // Some types like Uint8Array and Node.js's Buffer cannot be frozen, but\n      // they all throw a TypeError when you try, so we re-throw any exceptions\n      // that are not TypeErrors, since that would be unexpected.\n      if (e instanceof TypeError) return null;\n      throw e;\n    }\n  }\n  return obj;\n}\nexport function maybeDeepFreeze(obj) {\n  if (globalThis.__DEV__ !== false) {\n    deepFreeze(obj);\n  }\n  return obj;\n}\n", "export function iterateObserversSafely(observers, method, argument) {\n  // In case observers is modified during iteration, we need to commit to the\n  // original elements, which also provides an opportunity to filter them down\n  // to just the observers with the given method.\n  var observersWithMethod = [];\n  observers.forEach(function (obs) {\n    return obs[method] && observersWithMethod.push(obs);\n  });\n  observersWithMethod.forEach(function (obs) {\n    return obs[method](argument);\n  });\n}\n", "import { Observable } from \"./Observable.js\";\n// Like Observable.prototype.map, except that the mapping function can\n// optionally return a Promise (or be async).\nexport function asyncMap(observable, mapFn, catchFn) {\n  return new Observable(function (observer) {\n    var promiseQueue = {\n      // Normally we would initialize promiseQueue to Promise.resolve(), but\n      // in this case, for backwards compatibility, we need to be careful to\n      // invoke the first callback synchronously.\n      then: function (callback) {\n        return new Promise(function (resolve) {\n          return resolve(callback());\n        });\n      }\n    };\n    function makeCallback(examiner, key) {\n      return function (arg) {\n        if (examiner) {\n          var both = function () {\n            // If the observer is closed, we don't want to continue calling the\n            // mapping function - it's result will be swallowed anyways.\n            return observer.closed ? /* will be swallowed */0 : examiner(arg);\n          };\n          promiseQueue = promiseQueue.then(both, both).then(function (result) {\n            return observer.next(result);\n          }, function (error) {\n            return observer.error(error);\n          });\n        } else {\n          observer[key](arg);\n        }\n      };\n    }\n    var handler = {\n      next: makeCallback(mapFn, \"next\"),\n      error: makeCallback(catchFn, \"error\"),\n      complete: function () {\n        // no need to reassign `promiseQueue`, after `observer.complete`,\n        // the observer will be closed and short-circuit everything anyways\n        /*promiseQueue = */\n        promiseQueue.then(function () {\n          return observer.complete();\n        });\n      }\n    };\n    var sub = observable.subscribe(handler);\n    return function () {\n      return sub.unsubscribe();\n    };\n  });\n}\n", "import { Observable } from \"./Observable.js\";\nimport { canUseSymbol } from \"../common/canUse.js\";\n// Generic implementations of Observable.prototype methods like map and\n// filter need to know how to create a new Observable from an Observable\n// subclass (like Concast or ObservableQuery). Those methods assume\n// (perhaps unwisely?) that they can call the subtype's constructor with a\n// Subscriber function, even though the subclass constructor might expect\n// different parameters. Defining this static Symbol.species property on\n// the subclass is a hint to generic Observable code to use the default\n// constructor instead of trying to do `new Subclass(observer => ...)`.\nexport function fixObservableSubclass(subclass) {\n  function set(key) {\n    // Object.defineProperty is necessary because the Symbol.species\n    // property is a getter by default in modern JS environments, so we\n    // can't assign to it with a normal assignment expression.\n    Object.defineProperty(subclass, key, {\n      value: Observable\n    });\n  }\n  if (canUseSymbol && Symbol.species) {\n    set(Symbol.species);\n  }\n  // The \"@@species\" string is used as a fake Symbol.species value in some\n  // polyfill systems (including the SymbolSpecies variable used by\n  // zen-observable), so we should set it as well, to be safe.\n  set(\"@@species\");\n  return subclass;\n}\n", "import { __extends } from \"tslib\";\nimport { Observable } from \"./Observable.js\";\nimport { iterateObserversSafely } from \"./iteration.js\";\nimport { fixObservableSubclass } from \"./subclassing.js\";\nfunction isPromiseLike(value) {\n  return value && typeof value.then === \"function\";\n}\n// A Concast<T> observable concatenates the given sources into a single\n// non-overlapping sequence of Ts, automatically unwrapping any promises,\n// and broadcasts the T elements of that sequence to any number of\n// subscribers, all without creating a bunch of intermediary Observable\n// wrapper objects.\n//\n// Even though any number of observers can subscribe to the Concast, each\n// source observable is guaranteed to receive at most one subscribe call,\n// and the results are multicast to all observers.\n//\n// In addition to broadcasting every next/error message to this.observers,\n// the Concast stores the most recent message using this.latest, so any\n// new observers can immediately receive the latest message, even if it\n// was originally delivered in the past. This behavior means we can assume\n// every active observer in this.observers has received the same most\n// recent message.\n//\n// With the exception of this.latest replay, a Concast is a \"hot\"\n// observable in the sense that it does not replay past results from the\n// beginning of time for each new observer.\n//\n// Could we have used some existing RxJS class instead? Concast<T> is\n// similar to a BehaviorSubject<T>, because it is multicast and redelivers\n// the latest next/error message to new subscribers. Unlike Subject<T>,\n// Concast<T> does not expose an Observer<T> interface (this.handlers is\n// intentionally private), since Concast<T> gets its inputs from the\n// concatenated sources. If we ever switch to RxJS, there may be some\n// value in reusing their code, but for now we use zen-observable, which\n// does not contain any Subject implementations.\nvar Concast = /** @class */function (_super) {\n  __extends(Concast, _super);\n  // Not only can the individual elements of the iterable be promises, but\n  // also the iterable itself can be wrapped in a promise.\n  function Concast(sources) {\n    var _this = _super.call(this, function (observer) {\n      _this.addObserver(observer);\n      return function () {\n        return _this.removeObserver(observer);\n      };\n    }) || this;\n    // Active observers receiving broadcast messages. Thanks to this.latest,\n    // we can assume all observers in this Set have received the same most\n    // recent message, though possibly at different times in the past.\n    _this.observers = new Set();\n    _this.promise = new Promise(function (resolve, reject) {\n      _this.resolve = resolve;\n      _this.reject = reject;\n    });\n    // Bound handler functions that can be reused for every internal\n    // subscription.\n    _this.handlers = {\n      next: function (result) {\n        if (_this.sub !== null) {\n          _this.latest = [\"next\", result];\n          _this.notify(\"next\", result);\n          iterateObserversSafely(_this.observers, \"next\", result);\n        }\n      },\n      error: function (error) {\n        var sub = _this.sub;\n        if (sub !== null) {\n          // Delay unsubscribing from the underlying subscription slightly,\n          // so that immediately subscribing another observer can keep the\n          // subscription active.\n          if (sub) setTimeout(function () {\n            return sub.unsubscribe();\n          });\n          _this.sub = null;\n          _this.latest = [\"error\", error];\n          _this.reject(error);\n          _this.notify(\"error\", error);\n          iterateObserversSafely(_this.observers, \"error\", error);\n        }\n      },\n      complete: function () {\n        var _a = _this,\n          sub = _a.sub,\n          _b = _a.sources,\n          sources = _b === void 0 ? [] : _b;\n        if (sub !== null) {\n          // If complete is called before concast.start, this.sources may be\n          // undefined, so we use a default value of [] for sources. That works\n          // here because it falls into the if (!value) {...} block, which\n          // appropriately terminates the Concast, even if this.sources might\n          // eventually have been initialized to a non-empty array.\n          var value = sources.shift();\n          if (!value) {\n            if (sub) setTimeout(function () {\n              return sub.unsubscribe();\n            });\n            _this.sub = null;\n            if (_this.latest && _this.latest[0] === \"next\") {\n              _this.resolve(_this.latest[1]);\n            } else {\n              _this.resolve();\n            }\n            _this.notify(\"complete\");\n            // We do not store this.latest = [\"complete\"], because doing so\n            // discards useful information about the previous next (or\n            // error) message. Instead, if new observers subscribe after\n            // this Concast has completed, they will receive the final\n            // 'next' message (unless there was an error) immediately\n            // followed by a 'complete' message (see addObserver).\n            iterateObserversSafely(_this.observers, \"complete\");\n          } else if (isPromiseLike(value)) {\n            value.then(function (obs) {\n              return _this.sub = obs.subscribe(_this.handlers);\n            }, _this.handlers.error);\n          } else {\n            _this.sub = value.subscribe(_this.handlers);\n          }\n        }\n      }\n    };\n    _this.nextResultListeners = new Set();\n    // A public way to abort observation and broadcast.\n    _this.cancel = function (reason) {\n      _this.reject(reason);\n      _this.sources = [];\n      _this.handlers.error(reason);\n    };\n    // Suppress rejection warnings for this.promise, since it's perfectly\n    // acceptable to pay no attention to this.promise if you're consuming\n    // the results through the normal observable API.\n    _this.promise.catch(function (_) {});\n    // If someone accidentally tries to create a Concast using a subscriber\n    // function, recover by creating an Observable from that subscriber and\n    // using it as the source.\n    if (typeof sources === \"function\") {\n      sources = [new Observable(sources)];\n    }\n    if (isPromiseLike(sources)) {\n      sources.then(function (iterable) {\n        return _this.start(iterable);\n      }, _this.handlers.error);\n    } else {\n      _this.start(sources);\n    }\n    return _this;\n  }\n  Concast.prototype.start = function (sources) {\n    if (this.sub !== void 0) return;\n    // In practice, sources is most often simply an Array of observables.\n    // TODO Consider using sources[Symbol.iterator]() to take advantage\n    // of the laziness of non-Array iterables.\n    this.sources = Array.from(sources);\n    // Calling this.handlers.complete() kicks off consumption of the first\n    // source observable. It's tempting to do this step lazily in\n    // addObserver, but this.promise can be accessed without calling\n    // addObserver, so consumption needs to begin eagerly.\n    this.handlers.complete();\n  };\n  Concast.prototype.deliverLastMessage = function (observer) {\n    if (this.latest) {\n      var nextOrError = this.latest[0];\n      var method = observer[nextOrError];\n      if (method) {\n        method.call(observer, this.latest[1]);\n      }\n      // If the subscription is already closed, and the last message was\n      // a 'next' message, simulate delivery of the final 'complete'\n      // message again.\n      if (this.sub === null && nextOrError === \"next\" && observer.complete) {\n        observer.complete();\n      }\n    }\n  };\n  Concast.prototype.addObserver = function (observer) {\n    if (!this.observers.has(observer)) {\n      // Immediately deliver the most recent message, so we can always\n      // be sure all observers have the latest information.\n      this.deliverLastMessage(observer);\n      this.observers.add(observer);\n    }\n  };\n  Concast.prototype.removeObserver = function (observer) {\n    if (this.observers.delete(observer) && this.observers.size < 1) {\n      // In case there are still any listeners in this.nextResultListeners, and\n      // no error or completion has been broadcast yet, make sure those\n      // observers have a chance to run and then remove themselves from\n      // this.observers.\n      this.handlers.complete();\n    }\n  };\n  Concast.prototype.notify = function (method, arg) {\n    var nextResultListeners = this.nextResultListeners;\n    if (nextResultListeners.size) {\n      // Replacing this.nextResultListeners first ensures it does not grow while\n      // we are iterating over it, potentially leading to infinite loops.\n      this.nextResultListeners = new Set();\n      nextResultListeners.forEach(function (listener) {\n        return listener(method, arg);\n      });\n    }\n  };\n  // We need a way to run callbacks just *before* the next result (or error or\n  // completion) is delivered by this Concast, so we can be sure any code that\n  // runs as a result of delivering that result/error observes the effects of\n  // running the callback(s). It was tempting to reuse the Observer type instead\n  // of introducing NextResultListener, but that messes with the sizing and\n  // maintenance of this.observers, and ends up being more code overall.\n  Concast.prototype.beforeNext = function (callback) {\n    var called = false;\n    this.nextResultListeners.add(function (method, arg) {\n      if (!called) {\n        called = true;\n        callback(method, arg);\n      }\n    });\n  };\n  return Concast;\n}(Observable);\nexport { Concast };\n// Necessary because the Concast constructor has a different signature\n// than the Observable constructor.\nfixObservableSubclass(Concast);\n", "import { isNonNullObject } from \"./objects.js\";\nimport { isNonEmptyArray } from \"./arrays.js\";\nimport { DeepMerger } from \"./mergeDeep.js\";\nexport function isExecutionPatchIncrementalResult(value) {\n  return \"incremental\" in value;\n}\nexport function isExecutionPatchInitialResult(value) {\n  return \"hasNext\" in value && \"data\" in value;\n}\nexport function isExecutionPatchResult(value) {\n  return isExecutionPatchIncrementalResult(value) || isExecutionPatchInitialResult(value);\n}\n// This function detects an Apollo payload result before it is transformed\n// into a FetchResult via HttpLink; it cannot detect an ApolloPayloadResult\n// once it leaves the link chain.\nexport function isApolloPayloadResult(value) {\n  return isNonNullObject(value) && \"payload\" in value;\n}\nexport function mergeIncrementalData(prevResult, result) {\n  var mergedData = prevResult;\n  var merger = new DeepMerger();\n  if (isExecutionPatchIncrementalResult(result) && isNonEmptyArray(result.incremental)) {\n    result.incremental.forEach(function (_a) {\n      var data = _a.data,\n        path = _a.path;\n      for (var i = path.length - 1; i >= 0; --i) {\n        var key = path[i];\n        var isNumericKey = !isNaN(+key);\n        var parent_1 = isNumericKey ? [] : {};\n        parent_1[key] = data;\n        data = parent_1;\n      }\n      mergedData = merger.merge(mergedData, data);\n    });\n  }\n  return mergedData;\n}\n", "import { isNonEmptyArray } from \"./arrays.js\";\nimport { isExecutionPatchIncrementalResult } from \"./incrementalResult.js\";\nexport function graphQLResultHasError(result) {\n  var errors = getGraphQLErrorsFromResult(result);\n  return isNonEmptyArray(errors);\n}\nexport function getGraphQLErrorsFromResult(result) {\n  var graphQLErrors = isNonEmptyArray(result.errors) ? result.errors.slice(0) : [];\n  if (isExecutionPatchIncrementalResult(result) && isNonEmptyArray(result.incremental)) {\n    result.incremental.forEach(function (incrementalResult) {\n      if (incrementalResult.errors) {\n        graphQLErrors.push.apply(graphQLErrors, incrementalResult.errors);\n      }\n    });\n  }\n  return graphQLErrors;\n}\n", "import { Observable } from \"../../utilities/index.js\";\nexport function fromError(errorValue) {\n  return new Observable(function (observer) {\n    observer.error(errorValue);\n  });\n}\n", "import { invariant } from \"../../utilities/globals/index.js\";\nexport function toPromise(observable) {\n  var completed = false;\n  return new Promise(function (resolve, reject) {\n    observable.subscribe({\n      next: function (data) {\n        if (completed) {\n          globalThis.__DEV__ !== false && invariant.warn(45);\n        } else {\n          completed = true;\n          resolve(data);\n        }\n      },\n      error: reject\n    });\n  });\n}\n", "import { Observable } from \"../../utilities/index.js\";\nexport function fromPromise(promise) {\n  return new Observable(function (observer) {\n    promise.then(function (value) {\n      observer.next(value);\n      observer.complete();\n    }).catch(observer.error.bind(observer));\n  });\n}\n", "export var throwServerError = function (response, result, message) {\n  var error = new Error(message);\n  error.name = \"ServerError\";\n  error.response = response;\n  error.statusCode = response.status;\n  error.result = result;\n  throw error;\n};\n", "import { newInvariantError } from \"../../utilities/globals/index.js\";\nexport function validateOperation(operation) {\n  var OPERATION_FIELDS = [\"query\", \"operationName\", \"variables\", \"extensions\", \"context\"];\n  for (var _i = 0, _a = Object.keys(operation); _i < _a.length; _i++) {\n    var key = _a[_i];\n    if (OPERATION_FIELDS.indexOf(key) < 0) {\n      throw newInvariantError(46, key);\n    }\n  }\n  return operation;\n}\n", "import { __assign } from \"tslib\";\nexport function createOperation(starting, operation) {\n  var context = __assign({}, starting);\n  var setContext = function (next) {\n    if (typeof next === \"function\") {\n      context = __assign(__assign({}, context), next(context));\n    } else {\n      context = __assign(__assign({}, context), next);\n    }\n  };\n  var getContext = function () {\n    return __assign({}, context);\n  };\n  Object.defineProperty(operation, \"setContext\", {\n    enumerable: false,\n    value: setContext\n  });\n  Object.defineProperty(operation, \"getContext\", {\n    enumerable: false,\n    value: getContext\n  });\n  return operation;\n}\n", "import { getOperationName } from \"../../utilities/index.js\";\nexport function transformOperation(operation) {\n  var transformedOperation = {\n    variables: operation.variables || {},\n    extensions: operation.extensions || {},\n    operationName: operation.operationName,\n    query: operation.query\n  };\n  // Best guess at an operation name\n  if (!transformedOperation.operationName) {\n    transformedOperation.operationName = typeof transformedOperation.query !== \"string\" ? getOperationName(transformedOperation.query) || undefined : \"\";\n  }\n  return transformedOperation;\n}\n", "import { __assign } from \"tslib\";\nimport { visit } from \"graphql\";\nexport function filterOperationVariables(variables, query) {\n  var result = __assign({}, variables);\n  var unusedNames = new Set(Object.keys(variables));\n  visit(query, {\n    Variable: function (node, _key, parent) {\n      // A variable type definition at the top level of a query is not\n      // enough to silence server-side errors about the variable being\n      // unused, so variable definitions do not count as usage.\n      // https://spec.graphql.org/draft/#sec-All-Variables-Used\n      if (parent && parent.kind !== \"VariableDefinition\") {\n        unusedNames.delete(node.name.value);\n      }\n    }\n  });\n  unusedNames.forEach(function (name) {\n    delete result[name];\n  });\n  return result;\n}\n", "import { newInvariantError, invariant } from \"../../utilities/globals/index.js\";\nimport { Observable } from \"../../utilities/index.js\";\nimport { validateOperation, createOperation, transformOperation } from \"../utils/index.js\";\nfunction passthrough(op, forward) {\n  return forward ? forward(op) : Observable.of();\n}\nfunction toLink(handler) {\n  return typeof handler === \"function\" ? new ApolloLink(handler) : handler;\n}\nfunction isTerminating(link) {\n  return link.request.length <= 1;\n}\nvar ApolloLink = /** @class */function () {\n  function ApolloLink(request) {\n    if (request) this.request = request;\n  }\n  ApolloLink.empty = function () {\n    return new ApolloLink(function () {\n      return Observable.of();\n    });\n  };\n  ApolloLink.from = function (links) {\n    if (links.length === 0) return ApolloLink.empty();\n    return links.map(toLink).reduce(function (x, y) {\n      return x.concat(y);\n    });\n  };\n  ApolloLink.split = function (test, left, right) {\n    var leftLink = toLink(left);\n    var rightLink = toLink(right || new ApolloLink(passthrough));\n    var ret;\n    if (isTerminating(leftLink) && isTerminating(rightLink)) {\n      ret = new ApolloLink(function (operation) {\n        return test(operation) ? leftLink.request(operation) || Observable.of() : rightLink.request(operation) || Observable.of();\n      });\n    } else {\n      ret = new ApolloLink(function (operation, forward) {\n        return test(operation) ? leftLink.request(operation, forward) || Observable.of() : rightLink.request(operation, forward) || Observable.of();\n      });\n    }\n    return Object.assign(ret, {\n      left: leftLink,\n      right: rightLink\n    });\n  };\n  ApolloLink.execute = function (link, operation) {\n    return link.request(createOperation(operation.context, transformOperation(validateOperation(operation)))) || Observable.of();\n  };\n  ApolloLink.concat = function (first, second) {\n    var firstLink = toLink(first);\n    if (isTerminating(firstLink)) {\n      globalThis.__DEV__ !== false && invariant.warn(38, firstLink);\n      return firstLink;\n    }\n    var nextLink = toLink(second);\n    var ret;\n    if (isTerminating(nextLink)) {\n      ret = new ApolloLink(function (operation) {\n        return firstLink.request(operation, function (op) {\n          return nextLink.request(op) || Observable.of();\n        }) || Observable.of();\n      });\n    } else {\n      ret = new ApolloLink(function (operation, forward) {\n        return firstLink.request(operation, function (op) {\n          return nextLink.request(op, forward) || Observable.of();\n        }) || Observable.of();\n      });\n    }\n    return Object.assign(ret, {\n      left: firstLink,\n      right: nextLink\n    });\n  };\n  ApolloLink.prototype.split = function (test, left, right) {\n    return this.concat(ApolloLink.split(test, left, right || new ApolloLink(passthrough)));\n  };\n  ApolloLink.prototype.concat = function (next) {\n    return ApolloLink.concat(this, next);\n  };\n  ApolloLink.prototype.request = function (operation, forward) {\n    throw newInvariantError(39);\n  };\n  ApolloLink.prototype.onError = function (error, observer) {\n    if (observer && observer.error) {\n      observer.error(error);\n      // Returning false indicates that observer.error does not need to be\n      // called again, since it was already called (on the previous line).\n      // Calling observer.error again would not cause any real problems,\n      // since only the first call matters, but custom onError functions\n      // might have other reasons for wanting to prevent the default\n      // behavior by returning false.\n      return false;\n    }\n    // Throw errors will be passed to observer.error.\n    throw error;\n  };\n  ApolloLink.prototype.setOnError = function (fn) {\n    this.onError = fn;\n    return this;\n  };\n  return ApolloLink;\n}();\nexport { ApolloLink };\n", "import { ApolloLink } from \"./ApolloLink.js\";\nexport var empty = ApolloLink.empty;\n", "import { ApolloLink } from \"./ApolloLink.js\";\nexport var from = ApolloLink.from;\n", "import { ApolloLink } from \"./ApolloLink.js\";\nexport var split = ApolloLink.split;\n", "import { ApolloLink } from \"./ApolloLink.js\";\nexport var concat = ApolloLink.concat;\n", "import { ApolloLink } from \"./ApolloLink.js\";\nexport var execute = ApolloLink.execute;\n"],
  "mappings": "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",
  "names": ["InvariantError", "invariant", "_a", "value", "invariant", "_a", "invariant", "defaultDispose", "_a", "canonicalStringify", "key", "_a", "result", "invariant", "_a", "maybe", "Slot", "hasOwnProperty", "dep", "_a", "dep", "hasOwnProperty", "wrap", "cache", "DocumentTransform", "wrap", "invariant", "Subscription", "SubscriptionObserver", "Observable", "forEach", "concat", "value", "from", "root", "result", "Symbol", "result", "_a", "invariant", "root", "_a", "result", "invariant", "print", "result", "invariant", "_a", "hasOwnProperty", "DeepMerger", "result", "result", "Concast", "result", "_a", "sources", "result", "_a", "result", "invariant", "result", "_a", "result", "ApolloLink", "invariant"]
}
